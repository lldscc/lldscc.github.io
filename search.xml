<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>前端三件套Html，Css，Javascript</title>
      <link href="/post/1.html"/>
      <url>/post/1.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;标题&lt;/h1&gt;</span><br><span class="line">&lt;h2&gt;标题&lt;/h2&gt;</span><br><span class="line">&lt;h3&gt;标题&lt;/h3&gt;</span><br><span class="line">&lt;h4&gt;标题&lt;/h4&gt;</span><br><span class="line">&lt;h5&gt;标题&lt;/h5&gt;</span><br><span class="line">&lt;h6&gt;标题&lt;/h6&gt;</span><br></pre></td></tr></table></figure><h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;This is a paragraph.&lt;/p&gt;</span><br></pre></td></tr></table></figure><h2 id="文本格式化标签"><a href="#文本格式化标签" class="headerlink" title="文本格式化标签"></a>文本格式化标签</h2><p>div 标签：块级元素 盒子标签 ；文档中的一个部分会显示为绿色</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color:#00FF00&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>This is a header<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;b&gt;加粗&lt;/b&gt;</span><br><span class="line">&lt;strong&gt;加粗&lt;/strong&gt;</span><br><span class="line">&lt;u&gt;下划线&lt;/u&gt;</span><br><span class="line">&lt;ins&gt;下划线&lt;/ins&gt;</span><br><span class="line">&lt;i&gt;倾斜&lt;/i&gt;</span><br><span class="line">&lt;em&gt;倾斜&lt;/em&gt;</span><br><span class="line">&lt;s&gt;删除线&lt;/s&gt;</span><br><span class="line">&lt;del&gt;删除线&lt;/del&gt;</span><br><span class="line">注释：ctrl + /</span><br><span class="line">&lt;hr&gt;：水平线</span><br><span class="line">&lt;br&gt;：换行</span><br></pre></td></tr></table></figure><h2 id="音视频图片"><a href="#音视频图片" class="headerlink" title="音视频图片"></a>音视频图片</h2><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><ul><li><strong>alt </strong> 替换文本，图片加载失败是会显示替换文本</li><li><strong>title</strong> 提示文本，但鼠标悬停是显示提示文本(其他标签也可以使用)</li><li><strong>width,height:</strong> 图片的宽度高度，只设置一个，会等比缩放</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 相对路径-同级 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;pic03.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./pic01.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 相对路径-下级 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/pic02.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 相对路径-上级 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../nxda.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;pic03.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;加载失败&quot;</span> <span class="attr">title</span>=<span class="string">&quot;图片&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="音视频"><a href="#音视频" class="headerlink" title="音视频"></a>音视频</h3><ul><li><strong>controls</strong>: 显示播放控件</li><li><strong>autoplay</strong>：自动播放（大部分浏览器不支持</li><li><strong>loop</strong> : 循环播放</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;纳西妲01.mp3&quot;</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">loop</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video src=&quot;3.5pv.mp4&quot; controls width=&quot;1000&quot;&gt;&lt;/video&gt;</span><br></pre></td></tr></table></figure><h2 id="链接标签"><a href="#链接标签" class="headerlink" title="链接标签"></a>链接标签</h2><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>target 属性是目标地址的打开方式，_self:覆盖原网页；_blank:保留原网页</p><p>网页，图片，压缩包其他文件也可以跳转</p><ul><li>空链接</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;#&quot;&gt;空链接&lt;/a&gt;</span><br></pre></td></tr></table></figure><ul><li>外部链接</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;https://www.bilibili.com/&quot; target=&quot;_blank&quot;&gt;bilibili &lt;/a&gt;</span><br></pre></td></tr></table></figure><ul><li>内部链接</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;./06-视频.html&quot; target=&quot;_self&quot;&gt;原神&lt;/a&gt;</span><br></pre></td></tr></table></figure><ul><li>图片等其他也可以</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;http://www.baidu.com&quot;&gt;&lt;img src=&quot;pic01.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure><h3 id="锚点链接"><a href="#锚点链接" class="headerlink" title="锚点链接"></a>锚点链接</h3><p>链接标签 href 属性中设置 #名；目标标签设置 id = 名。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#a1&quot;</span>&gt;</span>雷电<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;pic03.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;a1&quot;</span>&gt;</span>将军<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h2><p><img src="https://cdn.jsdelivr.net/gh/Shuncsx/image/image-20230416140732719.png" alt="image-20230416140732719"></p><h2 id="列表标签（布局）"><a href="#列表标签（布局）" class="headerlink" title="列表标签（布局）"></a>列表标签（布局）</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><div class="table-container"><table><thead><tr><th style="text-align:center">标签名</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">ul</td><td style="text-align:center">表示无序列表的整体，用于包裹标签</td></tr><tr><td style="text-align:center">li</td><td style="text-align:center">表示无序列表的每一项，用于包含每一行的内容</td></tr></tbody></table></div><p>注意：ul 标签中只能放 li 标签，li 标签可以放任何标签。并列关系使用</p><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><div class="table-container"><table><thead><tr><th style="text-align:center">标签名</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">ol</td><td style="text-align:center">表示有序列表的整体，用于包裹标签</td></tr><tr><td style="text-align:center">li</td><td style="text-align:center">表示有序列表的每一项，用于包含每一行的内容</td></tr></tbody></table></div><p>注意：ol 标签中只能放 li 标签，li 标签可以放任何标签。</p><h3 id="自定义列表"><a href="#自定义列表" class="headerlink" title="自定义列表"></a>自定义列表</h3><div class="table-container"><table><thead><tr><th style="text-align:center">标签名</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">dl</td><td style="text-align:center">表示自定义列表的整体，用于包裹 dt/dd 标签</td></tr><tr><td style="text-align:center">dt</td><td style="text-align:center">表示自定义列表的主题</td></tr><tr><td style="text-align:center">dd</td><td style="text-align:center">表示自定义列表的针对主题的每一项内容，dd 标签默认缩进</td></tr></tbody></table></div><p>注意：dl 标签中只能放 dt/dd 标签，dt/dd 标签可以放任何标签。有父子关系使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">d1</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格标签（数据）"><a href="#表格标签（数据）" class="headerlink" title="表格标签（数据）"></a>表格标签（数据）</h2><h3 id="表格基本标签"><a href="#表格基本标签" class="headerlink" title="表格基本标签"></a>表格基本标签</h3><div class="table-container"><table><thead><tr><th style="text-align:center">标签名</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">table</td><td style="text-align:center">表格整体，可用于包裹多个 tr</td></tr><tr><td style="text-align:center">tr</td><td style="text-align:center">表格每行，可用于包裹 td</td></tr><tr><td style="text-align:center">td</td><td style="text-align:center">表格单元格，可用于包裹内容</td></tr></tbody></table></div><p>标签的嵌套关系：table&gt;tr&gt;td</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>19<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>女<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>18<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Shuncsx/image/image-20230409160333676.png" alt="image-20230409160333676" style="zoom:23%;" /></p><h3 id="表头标签"><a href="#表头标签" class="headerlink" title="表头标签"></a>表头标签</h3><div class="table-container"><table><thead><tr><th>标签名</th><th>说明</th></tr></thead><tbody><tr><td>caption</td><td>表格大标题，默认在表格整体顶部居中位置显示</td></tr><tr><td>th</td><td>小标题，通常在表格第一行，默认文字加粗居中显示</td></tr></tbody></table></div><ul><li>caption 标签书写在 table 标签内部</li><li>th 标签书写在 tr 标签内部（用于替换 td 标签）</li></ul><h3 id="表格属性"><a href="#表格属性" class="headerlink" title="表格属性"></a>表格属性</h3><p>注意点：属性值写在 table 标签中，实际开发时针对于样式效果推荐用 CSS 设置</p><div class="table-container"><table><thead><tr><th>属性名</th><th>属性值</th><th>效果</th></tr></thead><tbody><tr><td>align</td><td>left，center，right</td><td>表格相对周围元素的对齐方式</td></tr><tr><td>width</td><td>像素值</td><td>表格宽度</td></tr><tr><td>height</td><td>像素值</td><td>表格高度</td></tr><tr><td>border</td><td>1 或“”</td><td>是否加边框</td></tr><tr><td>cellpadding</td><td>像素值</td><td>单元边与内容之间的距离，默认 1 像素。</td></tr><tr><td>callspacing</td><td>像素值</td><td>单元格之间的距离，默认 2 像素。</td></tr></tbody></table></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 加边框 */</span></span><br><span class="line"><span class="selector-tag">table</span>,</span><br><span class="line"><span class="selector-tag">tr</span>,</span><br><span class="line"><span class="selector-tag">th</span>,</span><br><span class="line"><span class="selector-tag">td</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 合并边框 */</span></span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">  <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="表格结构标签"><a href="#表格结构标签" class="headerlink" title="表格结构标签"></a>表格结构标签</h3><div class="table-container"><table><thead><tr><th>标签名</th><th>名称</th></tr></thead><tbody><tr><td>thead</td><td>表格头部</td></tr><tr><td>tbody</td><td>表格主体</td></tr><tr><td>dfoot</td><td>表格底部</td></tr></tbody></table></div><ul><li>表格结构标签内部用于包裹 tr 标签</li><li>表格的结构标签可以省略，让表格的内容结构分组，突出表格的不同部分（头部、主体、底部），使语义更加清晰</li></ul><h3 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h3><div class="table-container"><table><thead><tr><th>属性名</th><th>使用</th><th>说明</th></tr></thead><tbody><tr><td>rowspan</td><td>rowspan:=”合并单元格的个数”</td><td>跨行合并，将多行的单元格垂直合并</td></tr><tr><td>colspan</td><td>colspan:=”合并单元格的个数”</td><td>跨列合并，将多列的单元格水平合并</td></tr><tr><td></td><td></td></tr></tbody></table></div><p>步骤： 1.先确定是跨行还是跨列合并。 2.找到目标单元格.写上合并方式=合并的单元格数量。比如：&lt; td colspan=”2”&gt; &lt; td &gt;。 3.删除多余的单元格。</p><p>目标单元格（写合并代码）：<br>跨行：最上侧单元格为目标单元格，写合并代码<br>跨列：最左侧单元格为目标单元格，写合并代码</p><h2 id="表单标签（信息）"><a href="#表单标签（信息）" class="headerlink" title="表单标签（信息）"></a>表单标签（信息）</h2><p>表单域：form 包含表单元素</p><h3 id="input-输入表单元素"><a href="#input-输入表单元素" class="headerlink" title="input:输入表单元素"></a>input:输入表单元素</h3><div class="table-container"><table><thead><tr><th>属性</th><th>属性值</th><th></th></tr></thead><tbody><tr><td>type</td><td>text</td><td>文本框，用于输入单行文本。</td></tr><tr><td></td><td>password</td><td>密码框，用于输入密码.</td></tr><tr><td></td><td>radio</td><td>单选框，用于多选一.性别：男 实现单选:name 值一样</td></tr><tr><td></td><td>checkbox</td><td>多选框，用于多选，默认选中，用于单选按钮和复选按钮。checked = “checked”</td></tr><tr><td></td><td>sibmit</td><td>提交按钮</td></tr><tr><td></td><td>resect</td><td>重置按钮</td></tr><tr><td></td><td>file</td><td>文件域，上传文件</td></tr><tr><td></td><td>button</td><td>普通按钮，结合 js button.disabled:是否禁用 ture false</td></tr><tr><td>name</td><td>用户自定义</td><td>当前控件的含义，提交之后可以告诉后端发送过去的数据是什么含义</td></tr><tr><td>checked</td><td></td><td>ture false</td></tr><tr><td>value</td><td></td><td>默认显示内容，用户输入的内容，提交之后会发送给后端服务器</td></tr><tr><td>maxlength</td><td></td><td>规定输入字段中字符的最大长度</td></tr><tr><td>label</td><td></td><td>点击范围</td></tr></tbody></table></div><p>1.name 和 value 是每个表单元素都有的属性值主要给后台人员使用.</p><p>2.name 表单元素的名字，要求单选按钮和复选框要有相同的 name 值.</p><p>3.checked 属性主要针对于单选按钮和复选框主要作用一打开页面，就要可以默认选中某个表</p><p>单元素</p><p>4.maxlength 是用户可以在表单元素输入的最大字符数一般较少使用.</p><p>5.type 属性可以让 input 表单元素设置不同的形态.</p><p>属性和值相同写一个就行</p><p>在 HTML 中，<code>&lt;input&gt;</code> 标签是用于创建用户输入控件的元素。<code>type</code> 属性是 <code>&lt;input&gt;</code> 标签的一个属性，用于指定输入控件的类型。</p><p><code>type</code> 属性可以接受不同的值，每个值对应不同的输入控件类型。以下是一些常见的 <code>type</code> 属性值及其对应的输入控件类型：</p><ul><li><code>text</code>：创建一个文本输入框，用于接受单行文本输入。</li><li><code>password</code>：创建一个密码输入框，输入的内容会被隐藏。</li><li><code>number</code>：创建一个数字输入框，用于接受数值输入。</li><li><code>email</code>：创建一个邮箱输入框，用于接受电子邮件地址。</li><li><code>date</code>：创建一个日期输入框，用于接受日期输入。</li><li><code>checkbox</code>：创建一个复选框，用于选择一个或多个选项。</li><li><code>radio</code>：创建一个单选框，用于从多个选项中选择一个。</li><li><code>file</code>：创建一个文件上传控件，用于选择上传文件。</li><li><code>submit</code>：创建一个提交按钮，用于提交表单数据。</li><li><code>reset</code>：创建一个重置按钮，用于重置表单数据。</li></ul><p>除了上述常见的 <code>type</code> 属性值，还有其他一些特殊的 <code>type</code> 属性，如 <code>color</code>、<code>range</code>、<code>search</code> 等，它们分别对应不同的输入控件类型。</p><p>通过设置不同的 <code>type</code> 属性值，可以创建不同类型的输入控件，以满足不同的用户输入需求。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt; input type=&quot;text&quot; &gt; &lt; input type=&quot;password&quot; &gt; 性别：男&lt; input type=&quot;radio&quot;&gt;女&lt;</span><br><span class="line">input type=&quot;radio&quot; &gt; 爱好：吃饭<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&#x27;&quot;</span> /&gt;</span>睡觉<span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">  <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="select-下拉表单元素"><a href="#select-下拉表单元素" class="headerlink" title="select:下拉表单元素"></a>select:下拉表单元素</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">  选择：</span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>se1ect 中至少包含一对 option</li><li>在 option 中定义 selected = “selected” 时，当前项即为默认选中项。</li></ul><h3 id="textarea-文本域元素"><a href="#textarea-文本域元素" class="headerlink" title="textarea:文本域元素"></a>textarea:文本域元素</h3><p>使用场景：当用户输入内容较多的情况下，我们就不能使用文本框表单了，此时我们可以使用</p><p>textarea 标签。在表单元素中，&lt; textarea &gt;标签是用于定义多行文本输入的控件.文件,使用多</p><p>行文本输入控件，可以输入更多的文字，该控件常见于留言板，评论。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">文本内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><p>cos=“每行中的字符数”，rows=“显示的行数,我们在实际开发中不会使用，都是用 CSS 来改变大小</p><h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//文字位置</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line"></span><br><span class="line">//外边距</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line"></span><br><span class="line">//内边距</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">30px</span>;</span><br></pre></td></tr></table></figure><p>​</p><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><h2 id="引入方式"><a href="#引入方式" class="headerlink" title="引入方式"></a>引入方式</h2><p>css 写在 style 标签中，style 标签一般写在 head 标签里面，title 标签下面，选择器 {css 属性}</p><p>CSS 常见三种引入方式</p><ul><li>内嵌式：style 标签中，head 标签里，title 标签下。作用当前页面，小案例</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    <span class="selector-tag">p</span>&#123;</span><br><span class="line">        <span class="comment">/* 文字颜色变红色 */</span></span><br><span class="line">        <span class="attribute">color</span>: red;</span><br><span class="line">        <span class="comment">/* 字变大 px:像素  */</span></span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">         <span class="comment">/* 背景颜色  */</span></span><br><span class="line">        <span class="attribute">background-color</span>: green;</span><br><span class="line">        <span class="comment">/* width  height */</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ul><li><p>外联式 ：单独的 css 文件，作用多个页面；适合项目中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-<span class="number">8</span>&quot;&gt;</span><br><span class="line">&lt;title&gt;myblog&lt;/title&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/css<span class="selector-class">.css</span>&quot;/&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure></li><li><p>行内式 ：在标签的 style 属性中；作用当前标签；配合 js 使用</p></li></ul><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><h3 id="基础选择器"><a href="#基础选择器" class="headerlink" title="基础选择器"></a>基础选择器</h3><ul><li>标签选择器</li><li>类选择器 class=”类名” .类名{}</li><li>id 选择器 id #类名{}</li><li>通配符选择器</li></ul><h3 id="进价选择器"><a href="#进价选择器" class="headerlink" title="进价选择器"></a>进价选择器</h3><ul><li><p>后代选择器 格式：父代选择器 后代选择器 {css}；</p></li><li><p>子代选择器 格式: 父代选择器 &gt;子代选择器{css};//亲儿子</p></li><li><p>并集选择器 格式 ：选择器，选择器{css};</p></li><li><p>交集选择器 格式：选择器.选择器{css};</p></li><li><p>伪类选择器 伪类选择器用于向某些选择器添加特殊的效果，比如给链接添加特殊效果，或选择第 1 个，第个元素。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;</span><br><span class="line">&#125; <span class="comment">/*选择所有未被访问的链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;</span><br><span class="line">&#125; <span class="comment">/*选择所有己已被访问的链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">&#125; <span class="comment">/*选择鼠标指针位于其上的链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">&#125; <span class="comment">/*选择活动链接（鼠标按下未弹起的链接）*/</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">&#125; <span class="comment">/*伪类选择器用于选取获得焦点的表单元素。*/</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//`<span class="selector-pseudo">:first</span>-child` 和 `<span class="selector-pseudo">:last-child</span>`：选择父元素下的第一个和最后一个子元素。</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first</span>-child &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line">//<span class="selector-pseudo">:nth-child</span>(n)：选择元素在其父元素中的排位，其中n可以是一个数字、表达式或关键词。用于选择特定位置的元素。</span><br><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(odd) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: lightgray;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="文本文字"><a href="#文本文字" class="headerlink" title="文本文字"></a>文本文字</h2><ul><li><strong>color</strong> 文本颜色</li><li><strong>font-size</strong> 字体大小 默认 16px</li><li><strong>font-weight</strong> 字体粗细 700</li><li><strong>font-style</strong> 倾斜效果 italic 倾斜；normal 正常</li><li><strong>font-family</strong> 字体</li><li><strong>font(复合属性)取值</strong>：font:style weight size family;<br>省略要求：只能省略前两个，如果省略了相当于设置了默认值<br>注意点：如果需要同时设置单独和连写形式。要么把单独的样式写在连写的下面；要么把单独的样式写在连写的里面</li><li><strong>text-align</strong> 对齐方式 左对齐：==left==； 居中对齐：==center== ； 右对齐：==right==</li><li><strong>text-indent</strong> 文本缩进 像素 px；字长度 em</li><li><strong>text-decoration</strong> 文本修饰无修饰： ==none==；删除线：==line-through==；下划线：==underline==；（使用 text-decoration：none；清除 a 标签默认的下划线）</li><li><strong>line-height</strong> 行高= 文字加上下间距 像素 px 或倍数</li></ul><p>标签水平居中 margin ：0 auto；</p><p>width height 宽高度 px</p><h2 id="元素显示模式"><a href="#元素显示模式" class="headerlink" title="元素显示模式"></a>元素显示模式</h2><div class="table-container"><table><thead><tr><th style="text-align:center">元素模式</th><th>元素排列</th><th>设置样式</th><th>默认宽度</th><th>包含</th></tr></thead><tbody><tr><td style="text-align:center">块级元素</td><td>一行只能放一个块级元素</td><td>可设置宽高度</td><td>容器 100%</td><td>任何标签</td></tr><tr><td style="text-align:center">行内元素</td><td>一行可以放多个行内元素</td><td>不可以设置宽高度</td><td>本身</td><td>文本或行内标签</td></tr><tr><td style="text-align:center">行内块元素</td><td>一行可以放多个行内块元素</td><td>可以设置宽高度</td><td>本身</td></tr></tbody></table></div><h3 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h3><p>常见的块元素有&lt; h1 &gt;~&lt; h6&gt;、&lt; p&gt;、&lt; div&gt;、&lt; u&gt;、&lt; ol&gt;、&lt; i&gt;等，&lt; div&gt;标签是最典型的块元素。块级元素的特点：</p><ul><li>比较霸道，自己独占一行。</li><li>高度，宽度、外边距以及内边距都可以控制。</li><li>宽度默认是容器（父级宽度）的 100%。</li><li>是一个容器及盒子，里面可以放行内或者块级元素。</li></ul><h3 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h3><p>常见的行内元素有&lt; a&gt;、&lt; strong&gt;、&lt; b&gt;、&lt; em&gt;、&lt; i&gt;、&lt; del&gt;、&lt; s&gt;、&lt; ins&gt;、&lt; u&gt;、&lt; span&gt;等，&lt; span&gt;标签是最典型的行内元素。行内元素的特点：</p><ul><li>相邻行内元素在一行上，一行可以显示多个。</li><li>高、完直接设置是无效的。</li><li>默认完度就是它本身内容的完度。</li><li>行内元素只能容纳文本或其他行内元素。</li></ul><h3 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h3><p>在行内元素中有几个特殊的标签&lt; img/&gt;、&lt; input/&gt;、&lt; td&gt;,它们同时具有块元素和行内元素的特点。有些资料称它们为行内块元素。行内块元素的特点：</p><ul><li>和相邻行内元素（行内块）在一行上，但是他们之间会有空白缝隙。一行可以显示多个（行内元素特点）。</li><li>默认完度就是它本身内容的宽度（行内元素特点）。</li><li>高度，行高、外边距以及内边距都可以控制（块级元素特点）。</li></ul><h3 id="模式转换"><a href="#模式转换" class="headerlink" title="模式转换"></a>模式转换</h3><ul><li><strong>display：block</strong>； 转换成块元素</li><li><strong>display：inline</strong>； 转换成行内元素</li><li><strong>display：inline-block；</strong> 转换成行内块元素</li></ul><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><h3 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span><span class="attr">--color</span>: 颜色值；;</span><br></pre></td></tr></table></figure><p>一般情况下元素背景颜色默认值是 transparent(透明)</p><h3 id="背景色半透明"><a href="#背景色半透明" class="headerlink" title="背景色半透明"></a>背景色半透明</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background:rgba (0,0,0,0.3);  /*alpha透明度，取值范围在0~1之间</span><br></pre></td></tr></table></figure><h3 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>： <span class="attribute">none</span> 或 url (url);</span><br></pre></td></tr></table></figure><h3 id="背景平铺"><a href="#背景平铺" class="headerlink" title="背景平铺"></a>背景平铺</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-repeat</span>: repeat或 no-repeat 或 repeat-x 或 repeat-y; //平铺类型</span><br></pre></td></tr></table></figure><p>不平铺：no-repeat; X 方向平铺：repeat-x; Y 方向平铺：repeat-y;</p><h3 id="背景图片位置"><a href="#背景图片位置" class="headerlink" title="背景图片位置"></a>背景图片位置</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-position</span>: x y；;</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:center">参考值</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:center">像素：px px</td><td style="text-align:left">百分数由浮点数字和单位标识符组成的长度值</td></tr><tr><td style="text-align:center">方位名词</td><td style="text-align:left">top，center，bottom，left，center，right 方位名词</td></tr></tbody></table></div><h3 id="背景图像固定"><a href="#背景图像固定" class="headerlink" title="背景图像固定"></a>背景图像固定</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-attachment</span> ： scroll(滚动，默认) / fixed(固定)</span><br></pre></td></tr></table></figure><h3 id="背景复合写法"><a href="#背景复合写法" class="headerlink" title="背景复合写法"></a>背景复合写法</h3><p>background: 背景颜色 背景图片地址 背景平铺 背景图像滚动 背景图片位置：</p><h1 id="div-css-布局"><a href="#div-css-布局" class="headerlink" title="div+css 布局"></a>div+css 布局</h1><p><strong>页面布局常用属性</strong></p><ol><li>字体属性: font-size</li><li>文本属性: text-decoration、text-align</li><li>首行缩进: text-indent</li><li>行高:line-height</li><li>宽高属性: width、height、min-height、max-height</li><li>背景属性: background</li><li>列表属性:list-style</li><li>字体颜色: color</li><li>定位属性: position</li><li>布局属性: display</li><li>浮动属性: float、clear</li><li>盒子模型; border、<strong>margin、padding</strong>，圆角边框: border-radius</li><li>阴影:text-shadow、box-shadow</li><li>移动居中 transform：translate（50%，50%）</li></ol><h2 id="浮动属性-float"><a href="#浮动属性-float" class="headerlink" title="浮动属性 float"></a>浮动属性 float</h2><ul><li>浮动元素在父元素内部浮动</li><li><p>浮动元素不占用空间</p></li><li><p>元素浮动，<strong>display 属性</strong>失效，可以设置宽高，不会独占一行</p></li></ul><p>语法：float：none/left/right</p><h2 id="定位属性"><a href="#定位属性" class="headerlink" title="定位属性"></a>定位属性</h2><p>position 属性指定一个元素(静态的，相对的，绝对或固定)的定位方法的类型</p><div class="table-container"><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">absolute</td><td style="text-align:center">生成<strong>绝对定位</strong>的元素，相对于 static 定位以外的第一个父元素进行定位，元素的位置通过“left” “top” right” 以及“bottom”属性进行规定，<strong>不占用原来位置</strong>，移动参考点：网页的左上角；如果父元素有定位属性，移动参考点为父元素左上角。子绝父相：子级绝对定位，父级相对定位</td></tr><tr><td style="text-align:center">fixed</td><td style="text-align:center">生成<strong>固定定位</strong>的元素，相对于浏览器窗口进行定位元素的位置通过“left”，”top”“right”以及“bottom”属性进行规定</td></tr><tr><td style="text-align:center">relative</td><td style="text-align:center">生成<strong>相对定位</strong>的元素，相对于其正常位置进行定位因此，”left:20”会向元素的 LEFT 位置添加 20 像素（相对自己），<strong>会占用原来位置，定位参考点自己左上角</strong>，标签的属性不变。</td></tr><tr><td style="text-align:center">static</td><td style="text-align:center">默认值。没有定位，元素出现在正常的流中(忽略 top,bottom,left, right 或者 zindex 声明)。</td></tr></tbody></table></div><p>其他：z-index 属性设置有定位属性的盒子的 Z 轴显示，后写的盒子在上，z-index 设置 1，可以使先定义的盒子优先显示</p><h2 id="display"><a href="#display" class="headerlink" title="display"></a>display</h2><p>display 常见属性值</p><ul><li>none:隐藏对象不占原来的位置，（visibility：hidden 隐藏占用位置，visibility：visible 显示）（（透明度 opacity：0 隐藏占用位置）</li><li>inline:指定对象为内联元素</li><li>block:指定对象为块元素</li><li>inline-block:指定对象为内联块元素，行内块元素</li><li>table-cell:指定对象作为表格单元格</li><li>flex:弹性盒</li></ul><h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><p>四个区域：</p><ul><li>内容 content</li><li>边框 border</li><li>内边距 padding</li><li>外边距 margin</li></ul><h3 id="边框-border"><a href="#边框-border" class="headerlink" title="边框 border"></a>边框 border</h3><p>border：宽度 样式 颜色；</p><p>border：1px solid red；</p><h3 id="外边距-margin"><a href="#外边距-margin" class="headerlink" title="外边距 margin"></a>外边距 margin</h3><p>外边距合并：同级以最大值，父子级：子级影响父级，父级加边框不影响</p><p>设置值：margin：上 右 左 下 ；margin：上 右左 下；margin：上下 左右；margin：上下左右；（顺时针）</p><p>块元素居中：margin：0 auto；</p><p>清除默认：padding：0；margin：0；</p><h2 id="flex-布局"><a href="#flex-布局" class="headerlink" title="flex 布局"></a>flex 布局</h2><p><a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/#flexbox-background">Flex 文档</a></p><p>设置方式：父元素添加 display：flex，子元素自动挤压或压伸；默认主轴为 X</p><p>父元素：弹性容器；子元素：弹性盒子</p><p>默认：主轴是内容大小，侧轴铺满</p><h3 id="主轴对齐方式"><a href="#主轴对齐方式" class="headerlink" title="主轴对齐方式"></a>主轴对齐方式</h3><p>属性名：<strong>justify-content</strong></p><div class="table-container"><table><thead><tr><th>属性值</th><th>效果</th></tr></thead><tbody><tr><td>flex-start;flex-end</td><td>弹性盒子从起点或终点开始排列</td></tr><tr><td><strong>center</strong></td><td>弹性盒子沿主轴居中排列</td></tr><tr><td><strong>space-between</strong></td><td>弹性盒子沿主轴均匀排列，空白间距均分在弹性盒子<strong>之间</strong></td></tr><tr><td><strong>space-around</strong></td><td>弹性盒子沿主轴均匀排列，空白间距均分在弹性盒子<strong>两侧</strong></td></tr><tr><td><strong>space-evenly</strong></td><td>弹性盒子沿主轴均匀排列，弹性盒子与容器之间间距相等</td></tr></tbody></table></div><h3 id="侧轴对齐方式"><a href="#侧轴对齐方式" class="headerlink" title="侧轴对齐方式"></a>侧轴对齐方式</h3><p>属性名：<strong>align-items</strong>所有弹性盒子（在弹性容器中设置）；</p><p><strong>align-self</strong>某个弹性盒子（在弹性盒子中设置）</p><div class="table-container"><table><thead><tr><th>属性值</th><th>效果</th></tr></thead><tbody><tr><td>stretch</td><td>默认：弹性盒子没有高度沿侧轴铺满</td></tr><tr><td>center</td><td>弹性盒子沿侧轴在容器居中排列</td></tr><tr><td>flex-start;flex-end</td><td>弹性盒子从起点或终点开始排列</td></tr></tbody></table></div><h3 id="修改主轴方向"><a href="#修改主轴方向" class="headerlink" title="修改主轴方向"></a>修改主轴方向</h3><p><strong>flex-direction：column</strong> 改成垂直方向</p><h3 id="弹性伸缩比"><a href="#弹性伸缩比" class="headerlink" title="弹性伸缩比"></a>弹性伸缩比</h3><p>控制主轴方向的尺寸，属性值整数，占用父级剩余尺寸发份数</p><h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><p>属性：<strong>flex-wrap：wrap</strong></p><h3 id="行对齐方式"><a href="#行对齐方式" class="headerlink" title="行对齐方式"></a>行对齐方式</h3><p>属性名<strong>：align-content</strong></p><div class="table-container"><table><thead><tr><th>属性值</th><th>效果</th></tr></thead><tbody><tr><td>flex-start;flex-end</td><td>弹性盒子从起点或终点开始排列</td></tr><tr><td><strong>center</strong></td><td>弹性盒子沿主轴居中排列</td></tr><tr><td><strong>space-between</strong></td><td>弹性盒子沿主轴均匀排列，空白间距均分在弹性盒子<strong>之间</strong></td></tr><tr><td><strong>space-around</strong></td><td>弹性盒子沿主轴均匀排列，空白间距均分在弹性盒子<strong>两侧</strong></td></tr><tr><td><strong>space-evenly</strong></td><td>弹性盒子沿主轴均匀排列，弹性盒子与容器之间间距相等</td></tr></tbody></table></div><h2 id="overflow-内容溢出"><a href="#overflow-内容溢出" class="headerlink" title="overflow 内容溢出"></a>overflow 内容溢出</h2><p>CSS 的<code>overflow</code>属性用于控制元素内容溢出时的处理方式。它有以下几个取值：</p><ol><li><p><code>visible</code>（默认值）：内容会溢出元素框，不会裁剪或添加滚动条。</p></li><li><p><code>hidden</code>：内容会被裁剪，超出元素框的部分将被隐藏。</p></li><li><p><code>scroll</code>：如果内容溢出元素框，会显示滚动条，即使内容没有溢出也会显示一个隐藏的滚动条。</p></li><li><p><code>auto</code>：如果内容溢出元素框，会显示滚动条，如果内容没有溢出则不显示滚动条。</p></li><li><p><code>inherit</code>：继承父元素的<code>overflow</code>属性。</p></li></ol><p>这些取值可以应用于任何具有尺寸限制的元素，如<code>div</code>、<code>span</code>、<code>p</code>等。通过设置<code>overflow</code>属性，你可以控制元素在内容溢出时的显示方式。</p><p>例如，以下代码将创建一个宽度为 200px、高度为 150px 的<code>div</code>元素，并设置其内容溢出时显示滚动条：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请注意，<code>overflow</code>属性只能在具有尺寸限制的元素上生效，如果元素没有设置宽度或高度，<code>overflow</code>属性将不会起作用。</p><h2 id="SVG"><a href="#SVG" class="headerlink" title="SVG"></a>SVG</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg xmlns=&quot;http://www.w3.org/<span class="number">2000</span>/svg<span class="string">&quot; width=&quot;</span><span class="number">30</span><span class="string">&quot; height=&quot;</span><span class="number">30</span><span class="string">&quot; fill=&quot;</span>currentColor<span class="string">&quot;</span></span><br><span class="line"><span class="string">                            class=&quot;</span>bi bi-person-fill<span class="string">&quot; viewBox=&quot;</span><span class="number">0</span> <span class="number">0</span> <span class="number">16</span> <span class="number">16</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">                            &lt;path d=&quot;</span>M3 <span class="number">14s</span>-<span class="number">1</span> <span class="number">0</span>-<span class="number">1</span>-<span class="number">1</span> <span class="number">1</span>-<span class="number">4</span> <span class="number">6</span>-<span class="number">4</span> <span class="number">6</span> <span class="number">3</span> <span class="number">6</span> <span class="number">4</span>-<span class="number">1</span> <span class="number">1</span>-<span class="number">1</span> <span class="number">1</span>H3Zm5-<span class="number">6</span>a3 <span class="number">3</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span>-<span class="number">6</span> <span class="number">3</span> <span class="number">3</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">6</span>Z<span class="string">&quot; /&gt;</span></span><br><span class="line"><span class="string">                        &lt;/svg&gt;</span></span><br></pre></td></tr></table></figure><p>这段代码是通过直接嵌入 SVG 代码的方式加载 SVG 图标。在你提供的 HTML 代码中，SVG 图标的内容被包含在<code>&lt;svg&gt;</code>元素内，这个<code>&lt;svg&gt;</code>元素定义了图标的宽度、高度、颜色等属性，并使用了一个 SVG 路径（<code>&lt;path&gt;</code>）来描述图标的形状。</p><p>具体来说：</p><ul><li><code>xmlns</code>属性指定了 SVG 命名空间。</li><li><code>width</code>和<code>height</code>属性定义了 SVG 图标的宽度和高度。</li><li><code>fill</code>属性用于指定 SVG 图标的填充颜色。</li><li><code>class</code>属性包含了一个 CSS 类，这可以用于进一步样式化 SVG 图标。</li><li><code>viewBox</code>属性定义了 SVG 坐标系统的坐标范围。</li></ul><p>总之，这种方式允许你在 HTML 中直接嵌入 SVG 图标，而无需引用外部 SVG 文件。这对于小型图标或需要通过 CSS 进行样式化的图标非常有用。SVG 的内容直接包含在 HTML 文件中，这使得图标更容易管理和自定义。</p><h2 id="css-布局标签"><a href="#css-布局标签" class="headerlink" title="css 布局标签"></a>css 布局标签</h2><p><code>&lt;nav&gt;</code> 是 HTML 中的一个语义元素，它通常用于定义一个页面上的导航栏（Navigation Bar）。导航栏用于导航到网站的不同部分、页面或链接到其他相关页面。<code>&lt;nav&gt;</code> 元素的主要目的是帮助搜索引擎和屏幕阅读器等工具理解页面的结构，并提供更好的可访问性。</p><p>通常，<code>&lt;nav&gt;</code> 元素包含导航链接，这些链接可以指向网站的主页、不同的部分、产品页面、关于页面、联系方式等。例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/products&quot;</span>&gt;</span>产品<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/about&quot;</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/contact&quot;</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在上面的示例中，<code>&lt;nav&gt;</code> 元素包含一个无序列表（<code>&lt;ul&gt;</code>），其中每个列表项（<code>&lt;li&gt;</code>）包含一个导航链接（<code>&lt;a&gt;</code>）。这样的结构有助于明确表示这是一个导航栏。</p><p>使用语义元素如 <code>&lt;nav&gt;</code> 而不是普通的 <code>&lt;div&gt;</code> 有助于提高页面的可访问性和可维护性，并使搜索引擎更容易理解页面的内容。当然，如何设计和样式化导航栏取决于具体的网站需求和设计风格。</p><p>HTML 中有许多其他语义元素，类似于<code>&lt;nav&gt;</code>，用于更清晰地定义页面的不同部分和内容。这些元素有助于提高页面的可读性、可维护性和可访问性。以下是一些常见的语义元素：</p><ol><li><p><code>&lt;header&gt;</code>：用于标识页面或页面内的头部部分，通常包含站点的标题、标志、导航菜单等。</p></li><li><p><code>&lt;footer&gt;</code>：用于标识页面或页面内的底部部分，通常包含版权信息、联系方式、相关链接等。</p></li><li><p><code>&lt;article&gt;</code>：用于标识页面的独立内容单元，如一篇新闻文章、博客帖子、产品评论等。</p></li><li><p><code>&lt;section&gt;</code>：用于将页面内容划分为逻辑上相关的部分，通常具有自己的标题。</p></li><li><p><code>&lt;aside&gt;</code>：用于标识页面内容之外的附加信息，如侧边栏、广告、相关链接等。</p></li><li><p><code>&lt;figure&gt;</code> 和 <code>&lt;figcaption&gt;</code>：<code>&lt;figure&gt;</code> 用于包含与文档主要内容相关的媒体，如图片、图表、音频或视频。<code>&lt;figcaption&gt;</code> 用于为<code>&lt;figure&gt;</code>提供标题。</p></li><li><p><code>&lt;main&gt;</code>：用于标识文档的主要内容，每个页面应该只有一个<code>&lt;main&gt;</code> 元素。</p></li><li><p><code>&lt;details&gt;</code> 和 <code>&lt;summary&gt;</code>：<code>&lt;details&gt;</code> 用于创建一个可展开的详细信息部分，而 <code>&lt;summary&gt;</code> 用于提供可点击的摘要或标题。</p></li></ol><p>这些语义元素有助于提高页面的结构化程度，使其更易于理解和维护，同时还能提供更好的可访问性。根据具体的页面内容和需求，你可以选择适当的语义元素来组织和呈现信息。</p><h1 id="iconfont-外部资源的使用"><a href="#iconfont-外部资源的使用" class="headerlink" title="iconfont 外部资源的使用"></a>iconfont 外部资源的使用</h1><h3 id="图标（线上）"><a href="#图标（线上）" class="headerlink" title="图标（线上）"></a>图标（线上）</h3><ol><li><p>添加到我的项目，生成在线 css 链接（Font class）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//at.alicdn.com/t/c/font_4265869_q83fcnzi9c.css</span><br></pre></td></tr></table></figure></li><li><p>在自己的 html 文件添加 css 链接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">    <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">href</span>=<span class="string">&quot;//at.alicdn.com/t/c/font_4265869_q83fcnzi9c.css&quot;</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用：在官网上找到图标的类名并添加</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-guanli&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-fenlei&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="字体（线上）"><a href="#字体（线上）" class="headerlink" title="字体（线上）"></a>字体（线上）</h3><ol><li><p>官网生成 font-face 代码</p></li><li><p>添加到 css 文件中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;阿里妈妈数黑体 Bold&quot;</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&quot;//at.alicdn.com/wf/webfont/6IP2yTB9h7Wj/4Q3uZQoLB90p.woff2&quot;</span>)</span><br><span class="line">      <span class="built_in">format</span>(<span class="string">&quot;woff2&quot;</span>), <span class="built_in">url</span>(<span class="string">&quot;//at.alicdn.com/wf/webfont/6IP2yTB9h7Wj/Sne47RzgjoxA.woff&quot;</span>)</span><br><span class="line">      <span class="built_in">format</span>(<span class="string">&quot;woff&quot;</span>);</span><br><span class="line">  <span class="attribute">font-display</span>: swap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>用 css 选择器选择要更换字体样式的标签</p></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;阿里妈妈数黑体 Bold&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="transform-变换"><a href="#transform-变换" class="headerlink" title="transform 变换"></a>transform 变换</h2><p>复合语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>() <span class="built_in">rotate</span>() <span class="built_in">scale</span>()...;</span><br></pre></td></tr></table></figure><p>transform 属性</p><ul><li><p><code>translate()</code>：平移元素，可以指定水平和垂直方向的偏移量。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>:<span class="built_in">translate</span>(x, y)</span><br><span class="line">transform:<span class="built_in">translateX</span>(<span class="number">50px</span>)</span><br><span class="line">transform:<span class="built_in">translateY</span>(<span class="number">50px</span>)</span><br><span class="line"><span class="comment">/*百分比根据自身*/</span></span><br></pre></td></tr></table></figure></li><li><p><code>rotate()</code>：旋转元素，可以指定旋转的角度。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span><br><span class="line"><span class="comment">/*度数单位：deg  可正可负 默认旋转中心点为元素中心*/</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">transform-origin</span>: x y;</span><br><span class="line"><span class="comment">/*x y 可以是中心点(50% 50%)</span></span><br><span class="line"><span class="comment">可以是像素或者方位( top bottom left right center)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li><li><p><code>scale()</code>：缩放元素，可以指定水平和垂直方向的缩放比例。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">scale</span>(x, y);</span><br><span class="line"><span class="comment">/*x y 宽高</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li><li><p><code>skew()</code>：倾斜元素，可以指定水平和垂直方向的倾斜角度。</p></li><li><p><code>matrix()</code>：通过 2D 矩阵变换来组合多个变换效果。</p></li><li><p><code>transform-origin</code>： 设置变换原点</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">6deg</span>) <span class="built_in">translate</span>(<span class="number">125%</span>, -<span class="number">23%</span>);</span><br></pre></td></tr></table></figure><h2 id="transition-过渡"><a href="#transition-过渡" class="headerlink" title="transition 过渡"></a>transition 过渡</h2><p>谁变化加给谁</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transition</span>: 过渡的属性 时间 运动曲线 何时开始;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">属性写all，全部</span></span><br><span class="line"><span class="comment">多个属性用逗号分隔</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><ul><li><code>transition-property</code>：指定要过渡的属性名称，可以是单个属性或多个属性的列表。</li><li><code>transition-duration</code>：指定过渡的持续时间，以秒（s）或毫秒（ms）为单位。</li><li><code>transition-timing-function</code>：指定过渡的缓动函数（默认的缓动函数 ease），用于控制过渡的速度曲线。</li><li><code>transition-delay</code>：指定过渡的延迟时间，以秒（s）或毫秒（ms）为单位。</li></ul><p>简写<code>transition: property duration timing-function delay</code></p><h2 id="animation-动画"><a href="#animation-动画" class="headerlink" title="animation 动画"></a>animation 动画</h2><h3 id="定义动画"><a href="#定义动画" class="headerlink" title="定义动画"></a>定义动画</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> move &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">100px</span>, <span class="number">100px</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用动画"><a href="#调用动画" class="headerlink" title="调用动画"></a>调用动画</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*复合写法</span></span><br><span class="line"><span class="comment">linear 表示动画的缓动函数为线性，即匀速运动。</span></span><br><span class="line"><span class="comment">infinite 表示动画循环播放无限次。</span></span><br><span class="line"><span class="comment">alternate 表示动画在每次循环结束后反向播放。 */</span></span><br><span class="line"><span class="attribute">animation</span>: move <span class="number">2s</span> linear infinite alternate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*单个写法 */</span></span><br><span class="line"><span class="attribute">animation-name</span>:动画名称</span><br><span class="line">animation-duration:持续时间</span><br></pre></td></tr></table></figure><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="子元素在父元素水平垂直居中"><a href="#子元素在父元素水平垂直居中" class="headerlink" title="子元素在父元素水平垂直居中"></a>子元素在父元素水平垂直居中</h2><p>要让 <code>&lt;img&gt;</code> 元素在 <code>&lt;div&gt;</code> 中水平垂直居中，你可以使用 CSS 的 flexbox 布局或者使用绝对定位。以下是两种方法的示例：</p><ol><li>使用 flexbox 布局：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boximg&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../../public/Icon/Category.png&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.boximg</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center; <span class="comment">/* 水平居中 */</span></span><br><span class="line">  <span class="attribute">align-items</span>: center; <span class="comment">/* 垂直居中 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.center</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个示例中，我们使用了一个外层的 <code>&lt;div&gt;</code> 元素 <code>.boximg</code> 来包裹 <code>&lt;img&gt;</code> 元素，并使用 flexbox 布局来实现水平和垂直居中。通过设置 <code>.boximg</code> 的 <code>display: flex</code>，我们将其变为一个 flex 容器，并使用 <code>justify-content: center</code> 和 <code>align-items: center</code> 来使其内容水平和垂直居中。同时，我们还使用了一个内层的 <code>&lt;div&gt;</code> 元素 <code>.center</code> 来实现 <code>&lt;img&gt;</code> 元素的居中。</p><ol><li>使用绝对定位：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boximg&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../../public/Icon/Category.png&quot;</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.boximg</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.center</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个示例中，我们将 <code>.boximg</code> 设置为相对定位，并将 <code>&lt;img&gt;</code> 元素 <code>.center</code> 设置为绝对定位。通过设置 <code>.center</code> 的 <code>top: 50%</code> 和 <code>left: 50%</code>，我们将其定位到父元素的中心位置。然后，使用 <code>transform: translate(-50%, -50%)</code> 将其向左和向上移动自身宽度和高度的一半，从而实现水平和垂直居中。</p><h1 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h1><h2 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h2><p>当你需要遍历数组或类数组对象（如 NodeList）中的每个元素时，<code>forEach</code> 是一个非常方便的方法。它可以帮助你简化代码，提高可读性，并且不需要使用传统的 <code>for</code> 循环。</p><p><code>forEach</code> 方法的基本语法如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">array.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">currentValue, index, array</span>) &#123;</span><br><span class="line">  <span class="comment">// 在这里执行对每个元素的操作</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><code>array</code>：要遍历的数组或类数组对象。</li><li><code>currentValue</code>：当前遍历的元素。</li><li><code>index</code>（可选）：当前元素的索引。</li><li><code>array</code>（可选）：正在遍历的数组或类数组对象。</li></ul><p>在回调函数中，你可以执行对每个元素的操作。回调函数的参数可以根据需要选择使用。通常情况下，我们只需要使用 <code>currentValue</code> 参数，它表示当前遍历的元素。</p><p>以下是一个示例，演示了如何使用 <code>forEach</code> 遍历数组并打印每个元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> array = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line">array.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">element</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(element);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在这个示例中，我们定义了一个数组 <code>array</code>，然后使用 <code>forEach</code> 方法遍历数组中的每个元素。在回调函数中，我们将每个元素打印到控制台。</p><p><code>forEach</code> 方法会自动遍历数组中的每个元素，并按顺序执行回调函数。它会处理数组中的每个元素，直到遍历完所有元素为止。</p><p>需要注意的是，<code>forEach</code> 方法没有返回值，它仅用于遍历数组。如果你需要对数组中的元素进行转换或筛选，并返回一个新的数组，可以考虑使用 <code>map</code> 或 <code>filter</code> 方法。</p><h2 id="filter-过滤"><a href="#filter-过滤" class="headerlink" title="filter 过滤"></a>filter 过滤</h2><p><code>filter</code> 是 JavaScript 中用于数组操作的一个高阶函数。它可以帮助你根据指定的条件筛选出符合条件的数组元素，并返回一个新数组，而不改变原始数组。以下是详细解释 <code>filter</code> 的用法：</p><p>语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> newArray = array.<span class="title function_">filter</span>(<span class="title function_">callback</span>(element[, index[, array]])[, thisArg])</span><br></pre></td></tr></table></figure><ul><li><code>array</code>：要进行筛选操作的原始数组。</li><li><code>callback</code>：一个用于测试每个元素的函数，它可以接受三个参数：<ul><li><code>element</code>：当前正在被测试的数组 元素。</li><li><code>index</code>（可选）：当前元素在数组中的索引。</li><li><code>array</code>（可选）：原始数组自身。</li></ul></li><li><code>thisArg</code>（可选）：在 <code>callback</code> 函数中可用作 <code>this</code> 的值。</li></ul><p><code>filter</code> 方法会遍历原始数组中的每个元素，并对每个元素调用 <code>callback</code> 函数。如果 <code>callback</code> 函数返回 <code>true</code>，则该元素会包含在新数组中，否则将被排除。</p><p>示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 筛选出偶数</span></span><br><span class="line"><span class="keyword">const</span> evenNumbers = numbers.<span class="title function_">filter</span>(<span class="keyword">function</span> (<span class="params">element</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> element % <span class="number">2</span> === <span class="number">0</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(evenNumbers); <span class="comment">// 输出 [2, 4]</span></span><br></pre></td></tr></table></figure><p>在上面的示例中，<code>filter</code> 方法通过传递一个回调函数来筛选出原始数组 <code>numbers</code> 中的偶数，最后返回新数组 <code>evenNumbers</code>。</p><p>你也可以使用箭头函数来更简洁地编写上述示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用箭头函数筛选出偶数</span></span><br><span class="line"><span class="keyword">const</span> evenNumbers = numbers.<span class="title function_">filter</span>(<span class="function">(<span class="params">element</span>) =&gt;</span> element % <span class="number">2</span> === <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(evenNumbers); <span class="comment">// 输出 [2, 4]</span></span><br></pre></td></tr></table></figure><p>总之，<code>filter</code> 是一个强大的数组方法，它可以根据指定的条件轻松筛选数组元素，创建一个新的包含符合条件元素的数组，而不修改原始</p><h2 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h2><p>这段代码是在 JavaScript 中进行操作的。它的作用是计算一个名为<code>list</code>的数组中所有对象的<code>num</code>属性的总和，并将结果存储在变量<code>total</code>中。</p><p>让我们一步步来解释这段代码：</p><ol><li><p><code>let total =</code>：这是声明一个名为<code>total</code>的变量，并使用<code>let</code>关键字来定义它。<code>let</code>关键字用于声明变量，而<code>total</code>是变量的名称。</p></li><li><p><code>this.list</code>：这是一个对象内部的属性访问方式，其中<code>this</code>指的是当前对象。它假设在对象的上下文中存在一个名为<code>list</code>的属性，这个属性是一个数组。</p></li><li><p><code>.reduce((sum, item) =&gt; sum + item.num, 0)</code>：这是对数组<code>list</code>应用了<code>reduce</code>方法的部分。<code>reduce</code>方法是用来对数组中的每个元素执行一个指定的函数，并将结果累积起来的方法。</p><ul><li><p><code>(sum, item) =&gt; sum + item.num</code>：这是一个箭头函数，它接受两个参数，<code>sum</code>和<code>item</code>。在每次迭代中，<code>sum</code>表示累积的总和，而<code>item</code>表示数组中的当前元素。箭头函数的主体部分是<code>sum + item.num</code>，它的作用是将当前元素的<code>num</code>属性的值加到累积的总和上。</p></li><li><p><code>0</code>：这是<code>reduce</code>方法的第二个参数，它是初始的累积值。在第一次迭代时，<code>sum</code>将等于初始值 0，并且会逐步累积到所有元素的<code>num</code>属性的总和。</p></li></ul></li></ol><p>所以，最终，变量<code>total</code>将包含<code>list</code>数组中所有对象的<code>num</code>属性的总和。这段代码使用了高阶函数<code>reduce</code>来实现这个功能，它是一种非常灵活和强大的数组操作方法。</p><h2 id="slice-字符串截取"><a href="#slice-字符串截取" class="headerlink" title="slice 字符串截取"></a>slice 字符串截取</h2><p>#</p><h2 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h2><p>JavaScript 中的箭头函数是一种更简洁的函数声明方式，通常用于定义匿名函数或简化函数表达式。以下是箭头函数的基本语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(parameters) =&gt; expression;</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li><code>parameters</code> 是函数的参数列表，可以是零个或多个参数，用括号括起来。</li><li><code>=&gt;</code> 表示箭头函数的定义。</li><li><code>expression</code> 是函数体，通常包含一条表达式，该表达式的结果将成为函数的返回值。</li></ul><p>下面是一些示例：</p><ol><li><p>无参数的箭头函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">() =&gt; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Hello, World!&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>单个参数的箭头函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(x) =&gt; x * <span class="number">2</span>;</span><br></pre></td></tr></table></figure></li><li><p>多个参数的箭头函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(a, b) =&gt; a + b;</span><br></pre></td></tr></table></figure></li><li><p>使用花括号 <code>&#123;&#125;</code> 来定义更复杂的函数体，需要显式返回值：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(x, y) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> sum = x + y;</span><br><span class="line">  <span class="keyword">return</span> sum;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>当只有一个参数时，括号可以省略：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(x) =&gt; x * <span class="number">2</span>;</span><br></pre></td></tr></table></figure></li></ol><p>箭头函数有一些特性和限制：</p><ul><li>箭头函数没有自己的 <code>this</code> 上下文，它们继承父级作用域的 <code>this</code> 值。</li><li>通常用于简单的函数表达式和回调函数。</li><li>不适合用作构造函数（不能使用 <code>new</code> 关键字）。</li><li>不能在箭头函数内使用 <code>arguments</code> 对象，但可以使用剩余参数 <code>...</code>。</li></ul><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="join-方法"><a href="#join-方法" class="headerlink" title="join 方法"></a>join 方法</h3><p>JavaScript 中的 <code>join()</code> 方法用于将数组的所有元素连接成一个字符串，并返回该字符串。你可以指定一个可选的分隔符，该分隔符将在连接数组元素时插入到它们之间。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.<span class="title function_">join</span>([separator]);</span><br></pre></td></tr></table></figure><ul><li><code>array</code>：要连接的数组。</li><li><code>separator</code>（可选）：指定的分隔符。如果省略该参数，数组元素将以逗号分隔并连接在一起。</li></ul><h3 id="map-方法"><a href="#map-方法" class="headerlink" title="map 方法"></a>map 方法</h3><p>JavaScript 中的 <code>map()</code> 方法是用于数组的高阶函数之一，它允许你创建一个新数组，其中的元素是原始数组经过指定函数处理后的结果。 <code>map()</code> 方法不会改变原始数组，而是返回一个新的数组，其中包含了处理后的元素。以下是 <code>map()</code> 方法的语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.<span class="title function_">map</span>(<span class="title function_">callback</span>(currentValue[, index[, array]])[, thisArg])</span><br></pre></td></tr></table></figure><ul><li><code>array</code>：要处理的数组。</li><li><code>callback</code>：对每个元素执行的函数。该函数接受三个参数：<ul><li><code>currentValue</code>：当前处理的元素的值。</li><li><code>index</code>（可选）：当前处理的元素的索引。</li><li><code>array</code>（可选）：调用 <code>map()</code> 方法的数组本身。</li></ul></li><li><code>thisArg</code>（可选）：执行 <code>callback</code> 函数时使用的 <code>this</code> 值。</li></ul><p>下面是一个使用 <code>map()</code> 方法的示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 map 将每个元素加倍</span></span><br><span class="line"><span class="keyword">const</span> doubled = numbers.<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">num</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> num * <span class="number">2</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(doubled); <span class="comment">// 输出：[2, 4, 6, 8, 10]</span></span><br></pre></td></tr></table></figure><p>你也可以使用箭头函数来更简洁地定义回调函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> doubled = numbers.<span class="title function_">map</span>(<span class="function">(<span class="params">num</span>) =&gt;</span> num * <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(doubled); <span class="comment">// 输出：[2, 4, 6, 8, 10]</span></span><br></pre></td></tr></table></figure><p><code>map()</code> 方法常用于将数组中的元素进行一定的转换或映射，例如计算每个元素的平方、将字符串数组转换为大写、从对象数组中提取特定属性等。它是函数式编程中非常强大且常用的工具之</p><h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><p>DOM（文档对象模型）操作允许你使用 JavaScript 来访问、修改和控制网页的内容和结构。以下是一些常见的 DOM 操作：</p><ol><li><p><strong>选取元素：</strong></p><ul><li>通过标签名称、类名、ID 或其他属性选取元素。例如，<code>document.getElementById()</code>、<code>document.querySelector()</code> 和 <code>document.querySelectorAll()</code>。</li></ul></li><li><p><strong>操作元素内容：</strong></p><ul><li>修改元素的文本内容：<code>element.textContent</code> 或 <code>element.innerHTML</code>。</li><li>修改元素的属性：<code>element.getAttribute()</code> 和 <code>element.setAttribute()</code>。</li></ul></li><li><p><strong>创建和添加元素：</strong></p><ul><li>创建新元素：<code>document.createElement()</code></li><li>添加元素到文档中：<code>element.appendChild()</code> 或 <code>element.insertBefore()</code>。</li></ul></li><li><p><strong>删除元素：</strong></p><ul><li>从父元素中删除子元素：<code>element.removeChild()</code>。</li></ul></li><li><p><strong>修改元素样式：</strong></p><ul><li>改变元素的 CSS 类：<code>element.classList.add()</code>、<code>element.classList.remove()</code>、<code>element.classList.toggle()</code> 等。</li><li>直接修改元素的样式属性：<code>element.style.property</code>。</li></ul></li><li><p><strong>事件处理：</strong></p><ul><li>添加事件监听器：<code>element.addEventListener()</code>。</li><li>移除事件监听器：<code>element.removeEventListener()</code>。</li></ul></li><li><p><strong>查询元素关系：</strong></p><ul><li>查找父元素：<code>element.parentElement</code>。</li><li>查找子元素：<code>element.children</code>。</li><li>查找兄弟元素：<code>element.nextElementSibling</code> 和 <code>element.previousElementSibling</code>。</li></ul></li><li><p><strong>滚动和尺寸：</strong></p><ul><li>获取文档的滚动位置：<code>window.scrollY</code> 和 <code>window.scrollX</code>。</li><li>获取元素的尺寸和位置：<code>element.getBoundingClientRect()</code>。</li></ul></li><li><p><strong>表单操作：</strong></p><ul><li>获取表单字段的值：<code>element.value</code>。</li><li>提交表单：<code>form.submit()</code>。</li></ul></li><li><p><strong>动态加载资源：</strong></p><ul><li>创建并加载新的脚本：<code>document.createElement(&#39;script&#39;)</code> 和 <code>element.src</code>。</li></ul></li></ol><p>这只是 DOM 操作的一小部分，JavaScript 提供了丰富的 API 来处理和操作 DOM。根据你的需求，你可以使用这些操作来构建交互性强、动态的网页应用程序。如果你有特定的 DOM 操作问题或需要更多示例，请随时提问。</p><h2 id="js-事件"><a href="#js-事件" class="headerlink" title="js 事件"></a>js 事件</h2><ol><li><p>点击事件（click）：当用户单击元素时触发，通常用于按钮、链接等。</p></li><li><p>鼠标悬停事件（mouseover 和 mouseout）：当鼠标移入或移出元素时触发，可用于创建悬停效果。</p></li><li><p>键盘事件（keydown、keyup 和 keypress）：当用户按下或释放键盘上的按键时触发，通常用于表单输入和键盘快捷键。</p></li><li><p>表单事件（submit、reset、change）：当用户提交表单、重置表单或输入字段值发生变化时触发，通常用于表单验证和交互。</p></li><li><p>页面加载事件（load）：当整个页面及其所有资源加载完成时触发，通常用于执行初始化操作。</p></li><li><p>页面卸载事件（unload）：当用户离开页面或关闭浏览器时触发，通常用于执行清理操作。</p></li><li><p>资源加载事件（readystatechange）：当文档、图片或其他资源加载状态发生变化时触发，用于处理资源加载完成后的操作。</p></li><li><p>鼠标滚动事件（scroll）：当用户滚动页面时触发，通常用于实现滚动效果。</p></li><li><p>窗口大小改变事件（resize）：当用户调整浏览器窗口大小时触发，通常用于响应式设计。</p></li><li><p>鼠标拖动事件（drag 和 drop）：用于处理元素的拖动和放置操作，通常与 HTML5 的拖放 API 一起使用。</p></li><li><p>触摸事件（touchstart、touchmove、touchend）：用于响应触摸设备上的触摸操作，如滑动、点击等。</p></li><li><p>动画事件（animationstart、animationiteration、animationend）：用于处理 CSS 动画的开始、迭代和结束事件。</p></li></ol><p>这只是一小部分常见的 JavaScript 事件，实际上有更多事件可以用于不同的交互场景。你可以使用事件监听器来捕获这些事件，然后执行相应的 JavaScript 代码以响应用户的交互行为。</p><h2 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h2><p><img src="https://raw.githubusercontent.com/lldscc/PicGo_bed/main/image/image-20231114150442276.png" alt="image-20231114150442276"></p><h3 id="原型对象"><a href="#原型对象" class="headerlink" title="原型对象"></a>原型对象</h3><ul><li><strong>构造函数</strong>都有一个 prototype 属性,指向另一个对象，就是<strong>原型对象</strong></li><li>这个对象可以挂载函数，对象实例化不会多次创建原型上的函数，节约内存</li><li>定义在 prototype 对象上的方法。实例可以共享</li><li>构造函数和原型对象中 this 都指向实例化的对象</li></ul><h3 id="对象原型"><a href="#对象原型" class="headerlink" title="对象原型"></a>对象原型</h3><p><strong>实例对象</strong>都会有一个属性<strong>proto</strong>,指向<strong>构造函数</strong>的<strong>原型对象</strong>prototype</p><h3 id="constructor-构造函数"><a href="#constructor-构造函数" class="headerlink" title="constructor 构造函数"></a>constructor 构造函数</h3><p>constructor 构造函数在原型对象中，是原型对象的属性, 指向我们定义构造函数</p><h2 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h2><h2 id="JS-库：-jQuery"><a href="#JS-库：-jQuery" class="headerlink" title="JS 库： jQuery"></a>JS 库： jQuery</h2><p>是一个流行的 JavaScript 库,它提供了丰富的功能,可以简化 HTML 文档的遍历、操作、事件处理等操作,使开发者能够更轻松地实现各种交互效果。它最初由 John Resig 开发,目前由开源社区维护。</p><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/表达式/</span><br></pre></td></tr></table></figure><h3 id="test-方法"><a href="#test-方法" class="headerlink" title="test()方法"></a>test()方法</h3><p>返回值：true；flase</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">&quot;1234567890&quot;</span>;</span><br><span class="line"><span class="comment">// 定义正则表达式</span></span><br><span class="line"><span class="keyword">const</span> reg = <span class="regexp">/6/</span>;</span><br><span class="line"><span class="comment">// 调用正则表达式的test方法,判断是否符合正则表达式</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(str));</span><br></pre></td></tr></table></figure><h3 id="exec"><a href="#exec" class="headerlink" title="exec()"></a>exec()</h3><p>在一个指定字符串中执行一个搜索匹配</p><p>返回值：成功返回数组；反之 null</p><h2 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h2><p>特殊字符，特殊含义的字符：<code>[a-z]</code>指 a 到 z</p><h3 id="边界符"><a href="#边界符" class="headerlink" title="边界符"></a>边界符</h3><p>表示位置，开头结尾，</p><div class="table-container"><table><thead><tr><th>^</th><th>开始</th></tr></thead><tbody><tr><td>$</td><td>结束</td></tr><tr><td>^a$</td><td>精确匹配，只选一个 a 字符</td></tr></tbody></table></div><h3 id="量词"><a href="#量词" class="headerlink" title="量词"></a>量词</h3><p>表示重复次数，某个模式出现的次数</p><div class="table-container"><table><thead><tr><th>*</th><th>重复零次或者更多次</th></tr></thead><tbody><tr><td>+</td><td>重复一次或者更多次</td></tr><tr><td>？</td><td>重复零次或者一次</td></tr><tr><td>{n}</td><td>重复 n 次</td></tr><tr><td>{n,}</td><td>重复 n 次或者更多次</td></tr><tr><td>{n，m}</td><td>重复 n 到 m 次</td></tr></tbody></table></div><h3 id="字符类"><a href="#字符类" class="headerlink" title="字符类"></a>字符类</h3><p>如：<code>/d</code>表示 0-9</p><div class="table-container"><table><thead><tr><th>[abc]</th><th>包含 abc 任意字符返回 true</th></tr></thead><tbody><tr><td>[a-z]</td><td>包含 a-z 任意字符</td></tr><tr><td>[a-zA-Z0-9]</td><td></td></tr><tr><td><sup><a href="#fn_a-z" id="reffn_a-z">a-z</a></sup></td><td>除了 a-z</td></tr><tr><td>.</td><td>除了换行符，其他</td></tr><tr><td>/d</td><td>匹配 0-9 任一数字:[0-9]</td></tr><tr><td>/w</td><td>相当于[a-zA-Z0-9]</td></tr></tbody></table></div><h2 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/表达式/修饰符</span><br></pre></td></tr></table></figure><p>ⅰ 是单词 ignore 的缩写，正则匹配时字母不区分大小写</p><p>g 是单词 global 的缩写，匹配所有满足正则表达式的结果</p><h3 id="replace-替换"><a href="#replace-替换" class="headerlink" title="replace 替换"></a>replace 替换</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符串.replace(/正则表达式/,&#x27;替换的文本&#x27;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web前端 </tag>
            
            <tag> Html </tag>
            
            <tag> Css </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue</title>
      <link href="/post/20231017.html"/>
      <url>/post/20231017.html</url>
      
        <content type="html"><![CDATA[<h2 id="脚手架-Vue-CLI"><a href="#脚手架-Vue-CLI" class="headerlink" title="脚手架 Vue CLI"></a>脚手架 Vue CLI</h2><p>使用步骤： </p><ol><li>全局安装 (一次) ：yarn global add @vue/cli 或 npm i @vue/cli -g </li><li>查看 VueCLI 版本：vue —version</li><li>创建项目架子：vue create project-name（项目名-不能用中文）</li><li>启动项目： yarn serve 或 npm run serve（找package.json）</li></ol><h2 id="vue实例中的属性"><a href="#vue实例中的属性" class="headerlink" title="vue实例中的属性"></a>vue实例中的属性</h2><h3 id="计算属性computed"><a href="#计算属性computed" class="headerlink" title="计算属性computed"></a>计算属性computed</h3><p>在 Vue.js 中，<code>computed</code> 是一个用于定义计算属性的选项。计算属性是基于响应式依赖进行缓存的属性，它的值会根据依赖的数据动态计算，并且只有在依赖发生变化时才会重新计算。</p><p>使用 <code>computed</code> 可以将计算属性定义为一个函数，该函数会根据依赖的数据进行计算，并返回计算结果。计算属性的值可以像普通属性一样在模板中使用。</p><p>以下是一个示例，演示了如何使用 <code>computed</code>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">firstName</span>: <span class="string">&#x27;John&#x27;</span>,</span><br><span class="line">    <span class="attr">lastName</span>: <span class="string">&#x27;Doe&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">computed</span>: &#123;</span><br><span class="line">    <span class="attr">fullName</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">&#x27; &#x27;</span> + <span class="variable language_">this</span>.<span class="property">lastName</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在这个示例中，我们定义了一个 Vue 实例，并在 <code>data</code> 选项中定义了 <code>firstName</code> 和 <code>lastName</code> 两个属性。然后，在 <code>computed</code> 选项中定义了一个计算属性 <code>fullName</code>，它的值是根据 <code>firstName</code> 和 <code>lastName</code> 进行拼接得到的。</p><p>在模板中，我们可以直接使用 <code>fullName</code> 计算属性的值：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123; fullName &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当 <code>firstName</code> 或 <code>lastName</code> 的值发生变化时，<code>fullName</code> 计算属性会自动重新计算，并更新模板中的显示。</p><p>计算属性的特点是它会进行缓存，只有在依赖的数据发生变化时才会重新计算。这意味着多次访问计算属性时，只有在依赖的数据发生变化时才会执行计算逻辑，其余时间会直接返回缓存的结果，从而提高性能。</p><p>与计算属性类似的选项是 <code>watch</code>，它用于监听数据的变化并执行相应的操作。不同之处在于，计算属性是基于依赖的数据进行计算，而 <code>watch</code> 是在数据变化时执行自定义的回调函数。</p><h3 id="监视属性watch"><a href="#监视属性watch" class="headerlink" title="监视属性watch"></a>监视属性watch</h3><p>在 Vue.js 中，<code>watch</code> 是一个选项，用于监视数据的变化并执行自定义的回调函数。<code>watch</code> 选项允许你在数据发生变化时执行一些操作，例如异步请求、计算其他数据或执行特定逻辑。</p><p>你可以在 Vue 组件的选项中定义 <code>watch</code>，并为需要监视的数据属性指定回调函数。当被监视的数据属性发生变化时，回调函数将被触发。</p><p>以下是一个示例，演示如何使用 <code>watch</code> 选项：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">count</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">watch</span>: &#123;</span><br><span class="line">    <span class="attr">count</span>: <span class="keyword">function</span>(<span class="params">newCount, oldCount</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`count 属性从 <span class="subst">$&#123;oldCount&#125;</span> 变为 <span class="subst">$&#123;newCount&#125;</span>`</span>);</span><br><span class="line">      <span class="comment">// 在这里执行你的自定义逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在这个示例中，我们定义了一个 Vue 实例，其中包含一个名为 <code>count</code> 的数据属性。然后，我们在 <code>watch</code> 选项中为 <code>count</code> 属性定义了一个回调函数。这个回调函数接受两个参数：新的属性值 <code>newCount</code> 和旧的属性值 <code>oldCount</code>。</p><p>当 <code>count</code> 属性的值发生变化时，回调函数将被触发，并打印出新旧值的信息。你可以在回调函数中执行你的自定义逻辑，例如发送网络请求或更新其他数据。</p><p>你还可以监视多个属性，只需在 <code>watch</code> 选项中添加多个属性和相应的回调函数即可。</p><p>需要注意的是，<code>watch</code> 通常用于需要异步操作或处理复杂逻辑的情况，而对于简单的计算属性，使用 <code>computed</code> 更为合适，因为 <code>computed</code> 具有自动缓存的特性，只在依赖的数据变化时才重新计算。</p><h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><p>三部分构成</p><ul><li>template：结构 （有且只能一个根元素）</li><li>script:   js逻辑 </li><li>style： 样式 (可支持less，需要装包)</li></ul><h3 id="普通组件的注册使用-局部注册"><a href="#普通组件的注册使用-局部注册" class="headerlink" title="普通组件的注册使用-局部注册"></a>普通组件的注册使用-局部注册</h3><ol><li>创建.vue文件（三个组成部分）</li><li>在使用的组件内先导入再注册，最后使用</li></ol><p>只能在注册的组件内使用</p><p>使用：当成html标签使用即可  &lt;组件名&gt;&lt;/组件名&gt;</p><p>组件名规范 —&gt; 大驼峰命名法， 如 HmHeader</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在需要的页面导入需要注册的组件   import 组件对象 from &#x27;.vue文件路径&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HmHeader</span> <span class="keyword">from</span> <span class="string">&#x27;./components/HmHeader&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;  <span class="comment">// 局部注册</span></span><br><span class="line">  <span class="attr">components</span>: &#123;</span><br><span class="line">   <span class="string">&#x27;组件名&#x27;</span>: 组件对象,</span><br><span class="line">    <span class="title class_">HmHeader</span>:<span class="title class_">HmHeaer</span>,</span><br><span class="line">    <span class="title class_">HmHeader</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="普通组件的注册使用-全局注册"><a href="#普通组件的注册使用-全局注册" class="headerlink" title="普通组件的注册使用-全局注册"></a>普通组件的注册使用-全局注册</h3><ol><li>创建.vue文件（三个组成部分）</li><li>main.js中进行全局注册</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在main.js导入需要注册的组件   import 组件对象 from &#x27;.vue文件路径&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HmHeader</span> <span class="keyword">from</span> <span class="string">&#x27;./components/HmHeader&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 进行全局注册</span></span><br><span class="line"><span class="comment">// Vue.component(&#x27;组件名&#x27;, 组件对象)</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;HmFooter&#x27;</span>, <span class="title class_">HmFooter</span>)</span><br></pre></td></tr></table></figure><h3 id="组件的分类"><a href="#组件的分类" class="headerlink" title="组件的分类"></a>组件的分类</h3><p>一般组件：放components文件夹</p><p>路由组件：放pages文件夹</p><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><p>Vue2     VueRouter3.x      Vuex3.x<br>Vue3    VueRouter4.x      Vuex4.x</p><p>VueRouter插件<a href="https://v3.router.vuejs.org/zh/">https://v3.router.vuejs.org/zh/</a></p><h3 id="固定5个固定的步骤（不用死背，熟能生巧）"><a href="#固定5个固定的步骤（不用死背，熟能生巧）" class="headerlink" title="固定5个固定的步骤（不用死背，熟能生巧）"></a>固定5个固定的步骤（不用死背，熟能生巧）</h3><ol><li><p>下载 VueRouter 模块到当前工程，版本3.6.5</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add vue-router@3.6.5</span><br></pre></td></tr></table></figure></li><li><p>main.js中引入VueRouter</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import VueRouter from &#x27;vue-router&#x27;</span><br></pre></td></tr></table></figure></li><li><p>安装注册</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue.use(VueRouter)</span><br></pre></td></tr></table></figure></li><li><p>创建路由对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const router = new VueRouter()</span><br></pre></td></tr></table></figure></li><li><p>注入，将路由对象注入到new Vue实例中，建立关联</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">new Vue(&#123;</span><br><span class="line">  render: h =&gt; h(App),</span><br><span class="line">  router:router</span><br><span class="line">&#125;).$mount(&#x27;#app&#x27;)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><p>当我们配置完以上5步之后 就可以看到浏览器地址栏中的路由 变成了 /#/的形式。表示项目的路由已经被Vue-Router管理了</p><h3 id="两个核心步骤"><a href="#两个核心步骤" class="headerlink" title="两个核心步骤"></a>两个核心步骤</h3><ol><li><p>创建需要的组件 (views目录)，配置路由规则</p><p><img src="D:\Code\Vue\HeiMa-Vue2+3资料\Vue2+3入门到实战-配套资料\02-MD笔记\day05\day05\assets\1682479639666.png" alt="68247963966"></p></li><li><p>配置导航，配置路由出口(路径匹配的组件显示的位置)</p><p>App.vue</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;footer_wrap&quot;&gt;</span><br><span class="line">  &lt;a href=&quot;#/find&quot;&gt;发现音乐&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#/my&quot;&gt;我的音乐&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#/friend&quot;&gt;朋友&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;top&quot;&gt;</span><br><span class="line">  &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="多级路由"><a href="#多级路由" class="headerlink" title="多级路由"></a>多级路由</h3><p>1.配置路由规则，使用children配置项：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">routes</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">About</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Home</span>,</span><br><span class="line"><span class="attr">children</span>:[ <span class="comment">//通过children配置子级路由</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;news&#x27;</span>, <span class="comment">//此处一定不要写：/news</span></span><br><span class="line"><span class="attr">component</span>:<span class="title class_">News</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;message&#x27;</span>,<span class="comment">//此处一定不要写：/message</span></span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Message</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>2.跳转（要写完整路径）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link to=&quot;/home/news&quot;&gt;News&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><h3 id="路由query参数"><a href="#路由query参数" class="headerlink" title="路由query参数"></a>路由query参数</h3><p>传递参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 跳转并携带query参数，to的字符串写法 --&gt;</span><br><span class="line">&lt;router-link :to=&quot;/home/message/detail?id=666&amp;title=你好&quot;&gt;跳转&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 跳转并携带query参数，to的对象写法 --&gt;</span><br><span class="line">&lt;router-link </span><br><span class="line">:to=&quot;&#123;</span><br><span class="line">path:&#x27;/home/message/detail&#x27;,</span><br><span class="line">query:&#123;</span><br><span class="line">   id:666,</span><br><span class="line">            title:&#x27;你好&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&#125;&quot;</span><br><span class="line">&gt;跳转&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><p>接收参数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$route.<span class="property">query</span>.<span class="property">id</span></span><br><span class="line">$route.<span class="property">query</span>.<span class="property">title</span></span><br></pre></td></tr></table></figure><h3 id="路由命名"><a href="#路由命名" class="headerlink" title="路由命名"></a>路由命名</h3><ol><li><p>作用：可以简化路由的跳转。</p></li><li><p>如何使用</p><ol><li><p>给路由命名：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/demo&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Demo</span>,</span><br><span class="line"><span class="attr">children</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;test&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Test</span>,</span><br><span class="line"><span class="attr">children</span>:[</span><br><span class="line">&#123;</span><br><span class="line">                      <span class="attr">name</span>:<span class="string">&#x27;hello&#x27;</span> <span class="comment">//给路由命名</span></span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;welcome&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Hello</span>,</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.简化跳转：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--简化前，需要写完整的路径 --&gt;</span><br><span class="line">&lt;router-link to=&quot;/demo/test/welcome&quot;&gt;跳转&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--简化后，直接通过名字跳转 --&gt;</span><br><span class="line">&lt;router-link :to=&quot;&#123;name:&#x27;hello&#x27;&#125;&quot;&gt;跳转&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--简化写法配合传递参数 --&gt;</span><br><span class="line">&lt;router-link </span><br><span class="line">:to=&quot;&#123;</span><br><span class="line">name:&#x27;hello&#x27;,</span><br><span class="line">query:&#123;</span><br><span class="line">   id:666,</span><br><span class="line">            title:&#x27;你好&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&#125;&quot;</span><br><span class="line">&gt;跳转&lt;/router-link&gt;</span><br></pre></td></tr></table></figure></li></ol></li></ol><h3 id="路由模块化"><a href="#路由模块化" class="headerlink" title="路由模块化"></a>路由模块化</h3><p>在src/router创建index.js创建路由规则，在main.js导入jndex.js；</p><p>引入组件：基于@（src目录），找组件</p><h3 id="声明式导航-导航链接"><a href="#声明式导航-导航链接" class="headerlink" title="声明式导航~导航链接"></a>声明式导航~导航链接</h3><p>实现导航高亮效果</p><p>vue-router提供了一个全局组件router-link(取代a标签)</p><p>1.能跳转，配置to属性指定路径（必须）。本质还是a标签，to无需#</p><p>2.能高亮，默认就会提供高亮类名，可以直接设置高亮样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer_wrap&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/find&quot;</span>&gt;</span>发现音乐<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/my&quot;</span>&gt;</span>我的音乐<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/friend&quot;</span>&gt;</span>朋友<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">//css</span><br><span class="line">.footer_wrap a.router-link-active&#123;</span><br><span class="line">  background-color: #37b50a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="属性：replace"><a href="#属性：replace" class="headerlink" title="属性：replace"></a>属性：replace</h4><p>控制路由跳转时操作浏览器历史记录的模式（默认push：追加历史记录；replace：替换当前记录）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//开启替换模式replace</span><br><span class="line">&lt;router-link replace  to=&quot;/find&quot;&gt;发现音乐&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><h3 id="缓存路由组件"><a href="#缓存路由组件" class="headerlink" title="缓存路由组件"></a>缓存路由组件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//在组件展示加&lt;keep alive&gt; &lt;/keep alive&gt;</span><br><span class="line">&lt;keep alive  include=&#x27;缓存组件名&#x27;&gt; </span><br><span class="line">&lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/keep alive&gt;</span><br></pre></td></tr></table></figure><p>绝对路径 ：@相当与src目录</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 前端框架 </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + Github pages个人博客搭建</title>
      <link href="/post/35071.html"/>
      <url>/post/35071.html</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-Github-Pages搭建"><a href="#hexo-Github-Pages搭建" class="headerlink" title="hexo+Github Pages搭建"></a>hexo+Github Pages搭建</h1><h2 id="hexo基本命令"><a href="#hexo基本命令" class="headerlink" title="hexo基本命令"></a>hexo基本命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli   //安装Hexo脚手架</span><br><span class="line"></span><br><span class="line">hexo init 初始化</span><br><span class="line"></span><br><span class="line">hexo new 文件名   创建文本文件名</span><br><span class="line"></span><br><span class="line">hexo g 静态文件生成</span><br><span class="line"></span><br><span class="line">hexo s启动服务器</span><br><span class="line"></span><br><span class="line">hexo d 部署网站</span><br><span class="line"></span><br><span class="line">_config.yml文件相关配置</span><br><span class="line">url: https://lldscc.github.io/</span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: <span class="string">&#x27;git&#x27;</span>   </span><br><span class="line">  repo: git@github.com:lldscc/lldscc.github.io.git   </span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><h2 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h2><p><strong>初始化文件夹</strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p><strong>配置_config.yml文件</strong>  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">url：https://lldscc.github.io/</span></span><br><span class="line"><span class="string">----------------------------------------------------------</span></span><br><span class="line"><span class="attr">deploy:</span>    </span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span>   </span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:lldscc/lldscc.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><strong>安装hexo-deployer-git 自动部署发布工具</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><strong>构建上传</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g   //静态资源构建</span><br><span class="line">hexo s   //本地访问</span><br><span class="line">hexo d   //上传Github</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/wushibo123/article/details/124619123">https://blog.csdn.net/wushibo123/article/details/124619123</a></p></blockquote><h2 id="发布内容"><a href="#发布内容" class="headerlink" title="发布内容"></a>发布内容</h2><p><strong>创建相关页面</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br><span class="line">hexo new page tags</span><br><span class="line">hexo new page link</span><br><span class="line">hexo new page tags</span><br><span class="line">hexo new page time</span><br></pre></td></tr></table></figure><p><strong>创建md文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p><strong>Front Matter（配置）</strong></p><p>您可以在命令中指定文章的布局（layout）， <code>post</code>（默认）；<code>`tags</code>标签；根据模板文件渲染</p><p><code>cover</code> 文章封面图片     <code>top_img</code>文章的banner 图</p><hr><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">title: &quot;文章标题&quot;</span><br><span class="line">date: 2023-10-14</span><br><span class="line">updated:</span><br><span class="line">comments：</span><br><span class="line">cover: /path/to/cover-image.jpg</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">categories:</span></span><br><span class="line"><span class="emphasis">  - 分类1</span></span><br><span class="line"><span class="emphasis">  - 分类2</span></span><br><span class="line"><span class="emphasis">tags:</span></span><br><span class="line"><span class="emphasis">  - 标签1</span></span><br><span class="line"><span class="emphasis">  - 标签2</span></span><br></pre></td></tr></table></figure><hr><p><strong>发布</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo cl   //清除缓存文件（db.json）和已生成的静态文件（public）</span><br><span class="line">hexo g    //生成的静态文件</span><br><span class="line">hexo s    //本地预览</span><br><span class="line">hexo d    //推送远程仓库</span><br></pre></td></tr></table></figure><h2 id="个人域名"><a href="#个人域名" class="headerlink" title="个人域名"></a>个人域名</h2><ol><li>在腾讯云或者阿里云购买一个喜欢的域名</li><li>DNS解析添加两条解析记录</li><li>本地博客根目录的scurce添加<code>CNAME</code>文件，内容为买的域名</li><li>github博客项目设置中pages选项中Custom domain填上买的域名</li></ol><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><h3 id="报错：网站404"><a href="#报错：网站404" class="headerlink" title="报错：网站404"></a>报错：网站404</h3><ol><li>使用 <code>node --version</code> 指令检查你电脑上的 Node.js 版本，并记下该版本 (例如：<code>v16.y.z</code>)</li><li>在储存库中建立 <code>.github/workflows/pages.yml</code>，并填入以下内容 (将 <code>16</code> 替换为上个步骤中记下的版本)：</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Pages</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span> <span class="comment"># default branch</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">pages:</span></span><br><span class="line">    <span class="attr">noderuns-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">permissions:</span></span><br><span class="line">      <span class="attr">contents:</span> <span class="string">write</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="number">16.</span><span class="string">x</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;16&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">NPM</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.OS</span> <span class="string">&#125;&#125;-npm-cache</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">github_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/wushibo123/article/details/124619123">https://blog.csdn.net/wushibo123/article/details/124619123</a></p><p><a href="https://butterfly.js.org/posts/21cfbf15/">https://butterfly.js.org/posts/21cfbf15/</a></p><hr><h1 id="博客美化"><a href="#博客美化" class="headerlink" title="博客美化"></a>博客美化</h1><h2 id="博客功能"><a href="#博客功能" class="headerlink" title="博客功能"></a>博客功能</h2><h3 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h3><h4 id="Twikoo评论系统"><a href="#Twikoo评论系统" class="headerlink" title="Twikoo评论系统"></a>Twikoo评论系统</h4><p><code>twikoo评论系统</code>  <code>Vercel云函数部署</code>  <code>MongDB数据库</code></p><p><a href="https://vercel.com/">Versonal官网</a></p><p><a href="https://www.mongodb.com/zh-cn">MongDB</a></p><p>文档教程</p><blockquote><p> <a href="https://twikoo.js.org/backend.html">https://twikoo.js.org/backend.html</a><br> <a href="https://butterfly.js.org/posts/ceeb73f/#%E8%A9%95%E8%AB%96">https://butterfly.js.org/posts/ceeb73f/#%E8%A9%95%E8%AB%96</a></p></blockquote><p>视频教程</p><blockquote><p><a href="https://www.bilibili.com/video/BV1Re4y1H7g8/?vd_source=671d2150464bd744c3785edec0c317b1">https://www.bilibili.com/video/BV1Re4y1H7g8/?vd_source=671d2150464bd744c3785edec0c317b1</a></p></blockquote><h4 id="Github评论系统"><a href="#Github评论系统" class="headerlink" title="Github评论系统"></a>Github评论系统</h4><h3 id="Github贡献图"><a href="#Github贡献图" class="headerlink" title="Github贡献图"></a>Github贡献图</h3><h3 id="博客外观"><a href="#博客外观" class="headerlink" title="博客外观"></a>博客外观</h3><p>在本地博客根目录克隆butterfly主题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><hr><h1 id="博客迁移"><a href="#博客迁移" class="headerlink" title="博客迁移"></a>博客迁移</h1><p>由于笔记本驱动问题重装了系统，把本地的hexo博客文件备份了下来，正好学习一下如何进行博客的迁移。</p><ol><li><p>安装nodejs和hexo脚手架环境</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">node <span class="literal">-v</span>      //检查是否安装</span><br><span class="line"></span><br><span class="line">npm install <span class="literal">-g</span> hexo<span class="literal">-cli</span>  //hexo脚手架</span><br><span class="line"></span><br><span class="line">hexo <span class="literal">-v</span>   //检查是否安装</span><br></pre></td></tr></table></figure></li><li><p>进行ssh密钥的github身份认证</p></li><li><p>添加用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config--global user.name<span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config-global user..email<span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>添加Hexo博客远程仓库</p></li><li><p>可以在本地的Bash环境下运行<code>hexo cl</code> <code>hexo g</code> <code>heox s</code>  <code>hexo d</code>命令了</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Glidejs</title>
      <link href="/post/64258.html"/>
      <url>/post/64258.html</url>
      
        <content type="html"><![CDATA[<blockquote><h1 id="glidejs"><a href="#glidejs" class="headerlink" title="glidejs"></a>glidejs</h1></blockquote><p><a href="https://glidejs.com/">https://glidejs.com/</a></p><p>无依赖性的JavaScript ES6滑块和旋转木马。它重量轻，灵活，速度快。设计用于滑动。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">## 安装配置</span><br><span class="line"></span><br><span class="line">```html</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;轮播图&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;./glide.core.min.css&quot;&gt;</span><br><span class="line">    &lt;link rel=&quot; stylesheet&quot; href=&quot;./glide.theme.min.css&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;script src=&quot;./glide.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        .glide &#123;</span><br><span class="line">            width: 800px;</span><br><span class="line"></span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .glide__slide img &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;glide &quot;&gt;</span><br><span class="line">        &lt;!-- 1.图片 --&gt;</span><br><span class="line">        &lt;div class=&quot;glide__track&quot; data-glide-el=&quot;track&quot;&gt;</span><br><span class="line">            &lt;ul class=&quot;glide__slides&quot;&gt;</span><br><span class="line">                &lt;li class=&quot;glide__slide&quot;&gt;&lt;img src=&quot;./img/desktop_2.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li class=&quot;glide__slide&quot;&gt;&lt;img src=&quot;./img/desktop_3.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li class=&quot;glide__slide&quot;&gt;&lt;img src=&quot;./img/desktop_2.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li class=&quot;glide__slide&quot;&gt;&lt;img src=&quot;./img/desktop_3.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 2.按钮 --&gt;</span><br><span class="line">        &lt;div class=&quot;glide__arrows&quot; data-glide-el=&quot;controls&quot;&gt;</span><br><span class="line">            &lt;button class=&quot;glide__arrow glide__arrow--left&quot; data-glide-dir=&quot;&lt;&quot;&gt;&amp;lt</span><br><span class="line">            &lt;/button&gt;</span><br><span class="line">            &lt;button class=&quot;glide__arrow glide__arrow--right&quot; data-glide-dir=&quot;&gt;&quot;&gt;&amp;gt&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 3.控制原点 --&gt;</span><br><span class="line">        &lt;div class=&quot;glide__bullets&quot; data-glide-el=&quot;controls[nav]&quot;&gt;</span><br><span class="line">            &lt;button class=&quot;glide__bullet&quot; data-glide-dir=&quot;=0&quot;&gt;&lt;/button&gt;</span><br><span class="line">            &lt;button class=&quot;glide__bullet&quot; data-glide-dir=&quot;=1&quot;&gt;&lt;/button&gt;</span><br><span class="line">            &lt;button class=&quot;glide__bullet&quot; data-glide-dir=&quot;=2&quot;&gt;&lt;/button&gt;</span><br><span class="line">            &lt;button class=&quot;glide__bullet&quot; data-glide-dir=&quot;=3&quot;&gt;&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    // Glide.js的初始化和挂载</span><br><span class="line">    var glide = new Glide(&#x27;.glide&#x27;, &#123;</span><br><span class="line">        // type:carousel(循环),slider(默认，跳到第一张)</span><br><span class="line">        type: &#x27;carousel&#x27;,</span><br><span class="line">        // startAt中间显示图片的索引</span><br><span class="line">        startAt: 1,</span><br><span class="line">        // perView显示几个</span><br><span class="line">        perView: 2,</span><br><span class="line">        // gap间距 默认10</span><br><span class="line">        gap: 15,</span><br><span class="line">        // autoplay:毫秒</span><br><span class="line">        autoplay: 1000,</span><br><span class="line">        // hoverpause ：布尔值</span><br><span class="line">        hoverpause: true</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    glide.mount()</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bootstraps</title>
      <link href="/post/2221.html"/>
      <url>/post/2221.html</url>
      
        <content type="html"><![CDATA[<h1 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h1><ol><li><p>在线引入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bootstrap 的 CSS 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">integrity</span>=<span class="string">&quot;sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入script --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- jQuery &amp;&amp;  bootstrap.min.js &amp;&amp;  popper.min.js 先是 jQuery，然后是 Popper，最后是 JavaScript 插件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">integrity</span>=<span class="string">&quot;sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   </span><br></pre></td></tr></table></figure></li><li><p>本地文件引入</p><p><code>bootstrap.min.css</code>   <code>popper.min.js</code>  <code>popper.min.js</code>   <code>bootstrap.min.js</code></p></li></ol><h1 id="栅格化布局"><a href="#栅格化布局" class="headerlink" title="栅格化布局"></a>栅格化布局</h1><p><a href="https://www.bootcss.com">https://www.bootcss.com</a>  Bootstrap框架</p><p>安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install bootstrap</span><br></pre></td></tr></table></figure><p>采用网格布局的区域，称为”容器”(container)。容器内部采用网格定位的子元素，是项目（item）</p><p>注意：项目只能是容器的顶层子元素，不包含项目的子元素，比如上面代码的&lt;&gt;元素就不是项目，Grid布局只对项目生效。</p><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:left">超小屏幕 手机 (&lt;768px）</th><th style="text-align:left">小屏幕 平板（≥768px）</th><th style="text-align:left">中等屏幕 桌面显示器 (≥992px)</th><th>大屏幕 大桌面显示器 (≥1200px)</th></tr></thead><tbody><tr><td style="text-align:center">栅格系统行为</td><td style="text-align:left">总是水平排列</td><td style="text-align:left">开始是堆叠在一起的，当大于这些阈值时将变为水平排列C</td><td style="text-align:left">开始是堆叠在一起的，当大于这些阈值时将变为水平排列C</td><td>开始是堆叠在一起的，当大于这些阈值时将变为水平排列C</td></tr><tr><td style="text-align:center"><code>.container</code> 最大宽度</td><td style="text-align:left">None （自动）</td><td style="text-align:left">750px</td><td style="text-align:left">970px</td><td>1170px</td></tr><tr><td style="text-align:center">类前缀</td><td style="text-align:left"><code>.col-xs-</code></td><td style="text-align:left"><code>.col-sm-</code></td><td style="text-align:left"><code>.col-md-</code></td><td><code>.col-lg-</code></td></tr><tr><td style="text-align:center">列（column）数</td><td style="text-align:left">12</td><td style="text-align:left">12</td><td style="text-align:left">12</td><td>12</td></tr><tr><td style="text-align:center">最大列（column）宽</td><td style="text-align:left">自动</td><td style="text-align:left">~62px</td><td style="text-align:left">~81px</td><td>~97px</td></tr><tr><td style="text-align:center">槽（gutter）宽</td><td style="text-align:left">30px （每列左右均有 15px）</td><td style="text-align:left">30px （每列左右均有 15px）</td><td style="text-align:left">30px （每列左右均有 15px）</td><td>30px （每列左右均有 15px）</td></tr><tr><td style="text-align:center">可嵌套</td><td style="text-align:left">是</td><td style="text-align:left"></td><td style="text-align:left"></td><td></td></tr><tr><td style="text-align:center">偏移（Offsets）</td><td style="text-align:left">是</td><td style="text-align:left"></td><td style="text-align:left"></td><td></td></tr><tr><td style="text-align:center">列排序</td><td style="text-align:left">是</td><td style="text-align:left"></td><td style="text-align:left"></td></tr></tbody></table></div><h1 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h1><h2 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h2><h3 id="文本颜色text"><a href="#文本颜色text" class="headerlink" title="文本颜色text"></a>文本颜色text</h3><p><img src="https://cdn.jsdelivr.net/gh/Shuncsx/image/image-20231001192621062.png" alt="image-20231001192621062"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-primary&quot;</span>&gt;</span>.text-primary<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-secondary&quot;</span>&gt;</span>.text-secondary<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-success&quot;</span>&gt;</span>.text-success<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-danger&quot;</span>&gt;</span>.text-danger<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-warning&quot;</span>&gt;</span>.text-warning<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-info&quot;</span>&gt;</span>.text-info<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-light bg-dark&quot;</span>&gt;</span>.text-light<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-dark&quot;</span>&gt;</span>.text-dark<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-body&quot;</span>&gt;</span>.text-body<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-muted&quot;</span>&gt;</span>.text-muted<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-white bg-dark&quot;</span>&gt;</span>.text-white<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-black-50&quot;</span>&gt;</span>.text-black-50<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-white-50 bg-dark&quot;</span>&gt;</span>.text-white-50<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="背景颜色Background-color"><a href="#背景颜色Background-color" class="headerlink" title="背景颜色Background color"></a>背景颜色Background color</h3><p><img src="https://cdn.jsdelivr.net/gh/Shuncsx/image/image-20231001192354581.png" alt="image-20231001192354581" style="zoom: 50%;" /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;p-3 mb-2 bg-primary text-white&quot;</span>&gt;</span>.bg-primary<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;p-3 mb-2 bg-secondary text-white&quot;</span>&gt;</span>.bg-secondary<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;p-3 mb-2 bg-success text-white&quot;</span>&gt;</span>.bg-success<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;p-3 mb-2 bg-danger text-white&quot;</span>&gt;</span>.bg-danger<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;p-3 mb-2 bg-warning text-dark&quot;</span>&gt;</span>.bg-warning<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;p-3 mb-2 bg-info text-white&quot;</span>&gt;</span>.bg-info<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;p-3 mb-2 bg-light text-dark&quot;</span>&gt;</span>.bg-light<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;p-3 mb-2 bg-dark text-white&quot;</span>&gt;</span>.bg-dark<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;p-3 mb-2 bg-white text-dark&quot;</span>&gt;</span>.bg-white<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;p-3 mb-2 bg-transparent text-dark&quot;</span>&gt;</span>.bg-transparent<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h2><h3 id="固定在顶部"><a href="#固定在顶部" class="headerlink" title="固定在顶部"></a>固定在顶部</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fixed-top&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="固定在底部"><a href="#固定在底部" class="headerlink" title="固定在底部"></a>固定在底部</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fixed-bottom&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="间距"><a href="#间距" class="headerlink" title="间距"></a>间距</h2><p><code>m</code> -对于设置了 <code>margin</code> 的类</p><p><code>p</code> -对于设置了 <code>padding</code> 的类</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web前端 </tag>
            
            <tag> 前端框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="/post/25246.html"/>
      <url>/post/25246.html</url>
      
        <content type="html"><![CDATA[<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h2 id="git常用命令"><a href="#git常用命令" class="headerlink" title="git常用命令"></a><i class="iconfont icon-fenlei1"></i>git常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">git init                 //在当前目录中初始化一个新的Git仓库。</span><br><span class="line">git add &lt;file&gt;           //将文件添加到暂存区，准备提交。常用git add .</span><br><span class="line">git commit -m <span class="string">&quot;commit message&quot;</span>     //将暂存区的更改提交到本地仓库，并添加提交消息。</span><br><span class="line">git push                           //将本地的更改推送到远程仓库。</span><br><span class="line"></span><br><span class="line">git remote add &lt;remote-name&gt; &lt;repository-url&gt;   //添加一个新的远程仓库。</span><br><span class="line">git <span class="built_in">clone</span> &lt;repository-url&gt;                      //克隆一个远程仓库到本地。</span><br><span class="line">git remote remove &lt;remote-name&gt;                 //移除指定的远程仓库。</span><br><span class="line"></span><br><span class="line">git remote -v          //查看已配置的远程仓库列表。</span><br><span class="line">git status             //查看当前工作目录和暂存区的状态。</span><br><span class="line">git <span class="built_in">log</span>                //查看提交历史记录。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git branch -m master main    //修改本地分支为mian</span><br><span class="line">git push -u origin main     //将本地main分支推送到远程仓库</span><br><span class="line">git branch                   //查看本地分支列表。</span><br><span class="line">git checkout &lt;branch-name&gt;  //切换到指定的分支。</span><br><span class="line">git merge &lt;branch-name&gt;    //将指定分支的更改合并到当前分支。</span><br><span class="line"></span><br><span class="line">设置远程仓库ssh地址：git remote set-url origin git@github.com:lldscc/gitTest.git</span><br></pre></td></tr></table></figure><h2 id="ssh身份绑定"><a href="#ssh身份绑定" class="headerlink" title="ssh身份绑定"></a><i class="iconfont icon-fenlei1"></i>ssh身份绑定</h2><h3 id="获取ssh密钥"><a href="#获取ssh密钥" class="headerlink" title="获取ssh密钥"></a>获取ssh密钥</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C “git账号”    //生成.ssh文件夹下的id_rsa.pub</span><br><span class="line">ssh-keygen -t rsa -b 4096 -C &quot;changllds666@gmail.com&quot;   //名称：id_rsa id_ecdsa id_ed25519</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git config --global user.name &quot;YourGitHubUsername&quot;</span><br><span class="line">git config --global user.email &quot;youremail@example.com&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ssh -T git@github.com     //验证当前用户</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="身份绑定"><a href="#身份绑定" class="headerlink" title="身份绑定"></a>身份绑定</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//全局</span><br><span class="line">git config --global user.name “git账号”</span><br><span class="line">git config --global user.email “git邮箱，注册时候的邮箱”  </span><br><span class="line">//局部</span><br><span class="line">git config  user.name “git账号”</span><br><span class="line">git config  user.email “git邮箱，注册时候的邮箱”</span><br></pre></td></tr></table></figure><h2 id="推送步骤"><a href="#推送步骤" class="headerlink" title="推送步骤"></a><i class="iconfont icon-fenlei1"></i>推送步骤</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init </span><br><span class="line">git add .</span><br><span class="line">git commit &quot;xx&quot;</span><br><span class="line">git remote  add origin ssh地址</span><br><span class="line">git push origin main</span><br></pre></td></tr></table></figure><h2 id="gitignore文件"><a href="#gitignore文件" class="headerlink" title="gitignore文件"></a>gitignore文件</h2><h3 id="添加语法："><a href="#添加语法：" class="headerlink" title="添加语法："></a>添加语法：</h3><p>项目根目录创建<code>.gitignore</code>文件，添加要忽略的文件</p><h4 id="一般情况"><a href="#一般情况" class="headerlink" title="一般情况"></a>一般情况</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 每一项配置独占一行</span><br><span class="line"># 每一行可以是：文件名，路径，或者正则表达式匹配模式</span><br><span class="line">.vscode</span><br><span class="line">a.txt</span><br></pre></td></tr></table></figure><h4 id="复杂情况"><a href="#复杂情况" class="headerlink" title="复杂情况"></a>复杂情况</h4><ol><li>空行不匹配任何文件，因此常用作分隔符（以方便阅读）。</li><li>用于注释，\ 表示转义（如对 a!bc.txt，需改为 a!bc.txt）。</li><li><ul><li>可以匹配任何字符(0或多次)，? 可以匹配任何字符(1次)</li></ul></li><li>当 / 在开头时，表示从项目根目录开始匹配。否则，下级都将匹配。<br>/abc 只能匹配 /abc，不能匹配 /x/abc 或 /x/y/abc等。</li><li>当 / 在末尾时，只匹配目录，否则，则同名的目录和文件都将匹配。<br>举例：  /abc/ 只能匹配 /abc目录，不能匹配/abc文件。<br>举例：  abc/ 能匹配 /abc/ 或 /x/abc/ 或 /x/y/abc/等，不能匹配 /abc 或 /x/abc 等。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 每一行可以是：文件名，路径，或者正则表达式匹配模式</span><br><span class="line">/src/temp/   #目录路径</span><br><span class="line">*.log        #匹配.log结尾的文件</span><br></pre></td></tr></table></figure><h3 id="规则检查命令"><a href="#规则检查命令" class="headerlink" title="规则检查命令"></a>规则检查命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git check-ignore -v &#123;文件或者路径&#125;</span><br></pre></td></tr></table></figure><p>有输出则表明这个文件被忽略了</p><blockquote><p><a href="https://www.bilibili.com/read/cv19909520/">gitignore忽略文件</a></p></blockquote><h2 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h2><p><strong>分为主分支(main)与开发分支(dev)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git branch                   //查看本地分支列表。</span><br><span class="line">git init -b &lt;分支名称&gt;        //同时初始化仓库并创建一个分支</span><br><span class="line">git branch  &lt;分支名称&gt;        //创建一个分支</span><br><span class="line">git branch -m master main    //修改本地分支为mian</span><br><span class="line">git checkout &lt;分支名&gt;      //切换到指定的分支。</span><br><span class="line">git branch -D &lt;分支名称&gt;     //删除分支</span><br><span class="line">git merge &lt;branch-name&gt;    //将指定分支的更改合并到当前分支。</span><br></pre></td></tr></table></figure><h2 id="tag标签管理"><a href="#tag标签管理" class="headerlink" title="tag标签管理"></a>tag标签管理</h2><p><img src="https://cdn.jsdelivr.net/gh/Shuncsx/image/image-20231018175342073.png" alt="image-20231018175342073"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">git  <span class="built_in">log</span> --oneline//查看提交历史日志</span><br><span class="line">git tag        //查看当前仓库中的所有标签</span><br><span class="line">git show &lt;标签名&gt;//详细信息</span><br><span class="line"></span><br><span class="line">git  tag v1.0       //创建轻量标签</span><br><span class="line">gittag -a &lt;标签名&gt; -m &lt;备注&gt;//创建注释标签</span><br><span class="line"></span><br><span class="line">git tag -d &lt;标签名&gt;//删除本地标签</span><br><span class="line">git push origin -d tag &lt;标签名1&gt; &lt;标签名2&gt;  //删除本地标签</span><br><span class="line"></span><br><span class="line">git push origin &lt;标签名&gt;  //推送标签到远程仓库</span><br><span class="line">git push origin --tags//推送全部</span><br></pre></td></tr></table></figure><h2 id="Github-fork-PR"><a href="#Github-fork-PR" class="headerlink" title="Github-fork/PR"></a>Github-fork/PR</h2><p>fork：分叉，服务端的代码仓库克隆</p><p>PR：Pull Request 贡献回原仓库</p>]]></content>
      
      
      <categories>
          
          <category> 计算机相关知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
